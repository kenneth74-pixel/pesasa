{"version":3,"file":"static/js/802.158bcca4.chunk.js","mappings":"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","sources":["jsx/components/AppsMenu/AppProfile/Documents.js","jsx/components/AppsMenu/AppProfile/TableExport.jsx","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'filepond/dist/filepond.min.css';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport { FilePond } from 'react-filepond';\r\nimport {\r\n  addFile, getUserFiles, getProcessComments,\r\n  getClientBussiness,\r\n  uploadFiles\r\n} from \"../../../../util/APIUtils.js\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\n/// Image\r\nimport Icon from \"@mui/material/Icon\";\r\nimport {\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport swal from \"sweetalert\";\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport TableExport from \"./TableExport.jsx\";\r\nconst PostDetails = () => {\r\n  const [sendMessage, setSendMessage] = useState(false);\r\n  const [theId, setId] = useState(null);\r\n  const [docs, setDocs] = useState([]);\r\n  const [isLoad, seLoad] = useState(false);\r\n  const [isLoad2, seLoad2] = useState(false);\r\n  const [incompId, setIncomp] = useState(0);\r\n  const [incompObj, setIncompObje] = useState({});\r\n\r\n  const [directorsId, setdirectorsId] = useState(0);\r\n  const [directorsObj, setdirectorsObj] = useState({});\r\n\r\n\r\n  const [regId, setregId] = useState(0);\r\n  const [regObj, setregObj] = useState({});\r\n\r\n\r\n  const [articlesId, setarticlesId] = useState(0);\r\n  const [articlesObj, setarticlesObj] = useState({});\r\n\r\n  const [postModal2, setPostModal2] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [bussType, setBussType] = useState(0);\r\n\r\n  const [invoicesId, setinvoicesId] = useState(0);\r\n  const [invoicesbj, setinvoicesbj] = useState({});\r\n  const [partnerobj, setpartnerobj] = useState({});\r\n  const [byeLawobj, setbyeLawobj] = useState({});\r\n  const [businessInfo, setBusinessInfo] = useState('')\r\n\r\n  comments.map((data) => {\r\n    data.type = data.type === \"VERIFIED\" ? <div style={{ color: \"green\" }}>{data.type} <i className=\"fa fa-check\"></i></div> : (data.type === \"DECLINED\" ? <div style={{ color: \"red\" }}>{data.type} <i className=\"fa fa-times\"></i></div> : data.type)\r\n    data.dateAdded = new Date(data.dateAdded).toDateString()\r\n  })\r\n\r\n  function handleEdit(type) {\r\n    if (type === \"INCORPORATION\") {\r\n      setId(incompObj.id)\r\n      setIncompObje({})\r\n\r\n    }\r\n\r\n    else if (type === \"DIRECTORS\") {\r\n      setId(directorsObj.id)\r\n      setdirectorsObj({})\r\n\r\n    }\r\n\r\n\r\n    else if (type === \"REG_ADDRESS\") {\r\n      setId(regObj.id)\r\n      setregObj({})\r\n\r\n    }\r\n\r\n    else if (type === \"ARTICLES\") {\r\n      setId(articlesObj.id)\r\n      setarticlesObj({})\r\n\r\n    }\r\n\r\n\r\n    else if (type === \"PAID_INVOICES\") {\r\n      setId(invoicesbj.id)\r\n      setinvoicesbj({})\r\n\r\n    }\r\n\r\n\r\n    else if (type === \"PARTNERSHIP_DEED\") {\r\n      setId(partnerobj.id)\r\n      setpartnerobj({})\r\n\r\n    }\r\n\r\n\r\n    else if (type === \"BYE_LAWS_OR_CONSTITUTION\") {\r\n      setId(byeLawobj.id)\r\n      setbyeLawobj({})\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  function getComments(data) {\r\n    setComments([])\r\n    getProcessComments(data)\r\n      .then((response) => {\r\n        setComments(response)\r\n        //\tsetPostModal(false);\r\n        //\tswal('Good job!', 'Successfully Added', \"success\");\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        swal('Oops', error.message, \"error\");\r\n      });\r\n  }\r\n\r\n  function openDetails2(data, process) {\r\n    //\tsetPostModal(false)\r\n    const getme = {\r\n      process: process,\r\n      processId: data.id\r\n    }\r\n    getComments(getme)\r\n    setPostModal2(true)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    getClientBussiness()\r\n      .then((response) => {\r\n        setBusinessInfo(response.type);\r\n        const isIn = response.type === \"Individual\" ? 1 : (response.type === \"Sole Proprietor\" ? 2 : (response.type === \"Limited Liability Company\" ? 3 : (response.type === \"Partnership\" ? 4 : (response.type === \"Group / Cooperatives\" ? 5 : 6))))\r\n        setBussType(isIn)\r\n\r\n        //\tsetPostModal(false);\r\n        //\tswal('Good job!', 'Successfully Added', \"success\");\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        //swal('Oops', error.message, \"error\");\r\n      });\r\n\r\n\r\n    getDocs()\r\n\r\n  }, []);\r\n\r\n  function getDocs() {\r\n    seLoad(true)\r\n    getUserFiles()\r\n      .then((response) => {\r\n        setDocs(response)\r\n        //setIncompObje\r\n        response.map((option, key) => {\r\n\r\n          if (option.type === \"INCORPORATION\") {\r\n            setIncompObje(option)\r\n          }\r\n\r\n\r\n          else if (option.type === \"DIRECTORS\") {\r\n\r\n            setdirectorsObj(option)\r\n          }\r\n\r\n\r\n          else if (option.type === \"REG_ADDRESS\") {\r\n\r\n            setregObj(option)\r\n          }\r\n\r\n\r\n          else if (option.type === \"ARTICLES\") {\r\n\r\n            setarticlesObj(option)\r\n          }\r\n\r\n\r\n          else if (option.type === \"PAID_INVOICES\") {\r\n\r\n            setinvoicesbj(option)\r\n          }\r\n\r\n          else if (option.type === \"PARTNERSHIP_DEED\") {\r\n\r\n            setpartnerobj(option)\r\n          }\r\n\r\n\r\n          else if (option.type === \"BYE_LAWS_OR_CONSTITUTION\") {\r\n\r\n            setbyeLawobj(option)\r\n          }\r\n\r\n\r\n\r\n        })\r\n        //\tsetPostModal(false);\r\n        //\tswal('Good job!', 'Successfully Added', \"success\");\r\n\r\n        seLoad(false)\r\n\r\n      })\r\n      .catch((error) => {\r\n        seLoad(false)\r\n        console.log(error);\r\n        //swal('Oops', error.message, \"error\");\r\n      });\r\n  }\r\n\r\n\r\n  const handleAddFormSubmit = (type, fileId) => {\r\n    // event.preventDefault();\r\n\r\n    const newContact = {\r\n      id: theId,\r\n      fileId: fileId,\r\n      type: type\r\n    };\r\n    // const newContacts = [...contacts, newContact];\r\n    //setContacts(newContacts);\r\n\r\n    console.log(newContact)\r\n    //\talert(JSON.stringify(addFormData))\r\n    seLoad2(true)\r\n    addFile(newContact)\r\n      .then((response) => {\r\n        seLoad2(false);\r\n        setId(null);\r\n        setIncomp(0);\r\n        setdirectorsId(0)\r\n        setarticlesId(0)\r\n        setinvoicesId(0)\r\n        setregId(0)\r\n        swal('Good job!', 'Successfully Added', \"success\");\r\n        getDocs()\r\n\r\n      })\r\n      .catch((error) => {\r\n        seLoad2(false);\r\n        console.log(error);\r\n        swal('Oops', error.message, \"error\");\r\n      });\r\n\r\n    //  addFormData.Cust_Name = addFormData.Location = addFormData.Date_Join = '';         \r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n      {isLoad2 ?\r\n        <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && incompId !== 0} /> : null}\r\n      <Dialog\r\n        disableEnforceFocus\r\n        //className=\"modal fade\"\r\n        //  className=\"fade bd-example-modal-lg\"\r\n        // fullscreen={true} \r\n        //dialogClassName=\"modal-90w\"\r\n        /// size=\"lg\"\r\n        fullWidth={true}\r\n        maxWidth={\"lg\"}\r\n        open={postModal2}\r\n        onClose={setPostModal2}\r\n      >\r\n\r\n        <DialogTitle>\r\n          <h4 >Approval Detail</h4>\r\n\r\n\r\n\r\n          {/* <button type=\"button\" className=\"btn-close\" onClick={()=> setPostModal2(false)} data-dismiss=\"modal\"></button> */}\r\n        </DialogTitle>\r\n        <DialogContent\r\n\r\n        >\r\n          <TableExport\r\n\r\n            hideDataExport={true}\r\n            rows={comments}\r\n            //rows={this.state.colors[1]===\"primary\"?finished: dataTemp}\r\n            columns={[\r\n              { name: 'dateAdded', title: 'Date' },\r\n              { name: 'user', title: 'User' },\r\n              { name: 'type', title: 'Action' },\r\n\r\n              { name: 'comment', title: 'Comment' },\r\n              // { name: 'actions', title: 'Actions' },\r\n            ]}\r\n            //  exportColumns={this.state.columns2}\r\n            defaultExpandedGroups={[]}\r\n            grouping={[]}\r\n            defaultHiddenColumnNames={[]}\r\n            defaultPageSize={0}\r\n            hideSelectionExport\r\n            infiniteScrolling\r\n            fileName={\"Directors\"}\r\n\r\n\r\n          />\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ width: \"100%\", overflow: \"hidden\" }}>\r\n\r\n          <button type=\"button\"\r\n            className=\"btn shadow btn-xs btn-primary\"\r\n\r\n            onClick={() => setPostModal2(false)}\r\n            data-dismiss=\"modal\">\r\n            Close\r\n          </button>\r\n\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div>\r\n        {/* <PageTitle\r\n          activeMenu=\"Post Details\"\r\n          motherMenu=\"Advanced\"\r\n          pageContent=\"Post Details\"\r\n        /> */}\r\n        {/* row */}\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"card\" style={{ padding: \"30px\" }}>\r\n              <div className=\"row\">\r\n                <div className=\"col\">\r\n                  <h4>Business Documents</h4>\r\n                  <p>Add {businessInfo}  documents</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"row\">\r\n\r\n              <div className=\"col-lg-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header border-0 pb-0\">\r\n                    <h5 className=\"text-primary\">\r\n                      {incompObj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n                        <Icon fontSize=\"medium\"\r\n                          style={{\r\n                            color: \"green\",\r\n                            marginRight: \"5px\",\r\n                            marginTop: \"0px\",\r\n                          }}\r\n\r\n                        >done</Icon>}\r\n                      {\" \"}Certificate of Incorporation / Registration</h5>\r\n                  </div>\r\n                  <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n                  <div className=\"card-body pt-3\"\t>\r\n                    {incompObj.type === undefined ?\r\n                      <FilePond\r\n                        acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n                    allowMultiple={false}\r\n                    maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n                  labelIdle=\"Drag &amp; Drop  Certificate of Incorporation Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n                server={\r\n                  {\r\n                    process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n                      // fieldName is the name of the input field\r\n                      // file is the actual file object to send\r\n                      const formData = new FormData();\r\n                      formData.append(\"file\", file);\r\n                      formData.append(\"name\", fieldName);\r\n                      formData.append(\"type\", 6);\r\n                      uploadFiles(formData)\r\n                        .then((response) => {\r\n\r\n                          setIncomp(response.id)\r\n                          load(response.id);\r\n                        })\r\n                        .catch((error) => {\r\n                          alert(error);\r\n                          alert(JSON.stringify(error))\r\n                        });\r\n\r\n\r\n\r\n\r\n\r\n                      //     formData.append(fieldName, file, file.name);\r\n\r\n                      //     const request = new XMLHttpRequest();\r\n\r\n                      //     // Should call the progress method to update the progress to 100% before calling load\r\n                      //     // Setting computable to false switches the loading indicator to infinite mode\r\n                      //     request.upload.onprogress = (e) => {\r\n                      //         progress(e.lengthComputable, e.loaded, e.total);\r\n                      //     };\r\n                      // let theid =0;\r\n                      //     // Should call the load method when done and pass the returned server file id\r\n                      //     // this server file id is then used later on when reverting or restoring a file\r\n                      //     // so your server knows which file to return without exposing that info to the client\r\n                      //     request.onload = function() {\r\n                      //         if (request.status >= 200 && request.status < 300) {\r\n                      //             // the load method accepts either a string (id) or an object\r\n                      //        //  alert((request.responseText))\r\n                      //          // console.log(request.responseText)\r\n                      //        //   alert(request.responseText)\r\n                      //             const returnObjc=JSON.parse(request.responseText)\r\n                      //            // load('https://www.opportunitybank.co.ug/backend/apiImages/uploads'+returnObjc.data);\r\n                      //             //alert(returnObjc.data)\r\n                      //            theid=returnObjc.id\r\n                      //            setIncomp(returnObjc.id)\r\n\r\n                      //         }\r\n                      //         else {\r\n                      //             // Can call the error method if something is wrong, should exit after\r\n                      //             error('oh no');\r\n                      //         }\r\n                      //     }.bind(this);\r\n\r\n\r\n\r\n                      //     request.send(formData);\r\n\r\n                      // Should expose an abort method so the request can be cancelled\r\n                      return {\r\n                        abort: () => {\r\n                          // This function is entered if the user has tapped the cancel button\r\n                          // request.abort();\r\n\r\n                          // Let FilePond know the request has been cancelled\r\n                          abort();\r\n                        }\r\n                      };\r\n                    },\r\n                    revert: (uniqueFileId, load, error) => {\r\n                      //  removeFile(this.state.fid)\r\n                      setIncomp(0)\r\n\r\n                      load()\r\n                    }\r\n                  }\r\n                }></FilePond>:\r\n              <>\r\n                <p className=\"mb-0\">Document Added</p>\r\n                <div style={{ marginTop: \"10px\" }}>\r\n\r\n                  <Button\r\n                    onClick={() =>\r\n                      handleEdit(\"INCORPORATION\")\r\n                    }\r\n\r\n                    variant=\"primary btn-xxs\">Replace Document</Button>\r\n                  <a style={{ marginLeft: \"10px\" }}\r\n                    target=\"_blank\"\r\n                    href={incompObj.path} >\r\n                    <Button\r\n\r\n\r\n                      variant=\"success btn-xxs\">View Document</Button>\r\n                  </a>\r\n\r\n\r\n                </div>\r\n              </>}\r\n              {/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n              <div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n                {isLoad ?\r\n                  <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && incompId !== 0} /> :\r\n                  <>\r\n                    {incompId === 0 ? null :\r\n                      <Button\r\n                        onClick={() =>\r\n                          handleAddFormSubmit(\"INCORPORATION\", incompId)\r\n                        }\r\n\r\n                        variant=\"primary btn-xxs\">Save Document</Button>}\r\n                  </>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {bussType === 3 ?\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header border-0 pb-0\">\r\n                <h5 className=\"text-primary\">\r\n                  {directorsObj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n                    <Icon fontSize=\"medium\"\r\n                      style={{\r\n                        color: \"green\",\r\n                        marginRight: \"5px\",\r\n                        marginTop: \"0px\",\r\n                      }}\r\n\r\n                    >done</Icon>}\r\n                  {\" \"}List of directors - Company form 7/20</h5>\r\n              </div>\r\n              <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n              <div className=\"card-body pt-3\"\t>\r\n                {directorsObj.type === undefined ?\r\n                  <FilePond\r\n                    acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n                allowMultiple={false}\r\n                maxFileSize={'2MB'}\r\n//</GridItem>\r\n              labelIdle=\"Drag &amp; Drop  List of directors - Company form 7/20 Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n            server={\r\n              {\r\n                process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n                  // fieldName is the name of the input field\r\n                  // file is the actual file object to send\r\n                  const formData = new FormData();\r\n                  formData.append(\"file\", file);\r\n                  formData.append(\"name\", fieldName);\r\n                  formData.append(\"type\", 6);\r\n                  uploadFiles(formData)\r\n                    .then((response) => {\r\n\r\n\r\n\r\n                      setdirectorsId(response.id)\r\n\r\n                      load(response.id);\r\n                    })\r\n                    .catch((error) => {\r\n                      alert(error);\r\n                      alert(JSON.stringify(error))\r\n                    });\r\n\r\n                  //     const formData = new FormData();\r\n                  //     formData.append(fieldName, file, file.name);\r\n\r\n                  //     const request = new XMLHttpRequest();\r\n\r\n                  //     // Should call the progress method to update the progress to 100% before calling load\r\n                  //     // Setting computable to false switches the loading indicator to infinite mode\r\n                  //     request.upload.onprogress = (e) => {\r\n                  //         progress(e.lengthComputable, e.loaded, e.total);\r\n                  //     };\r\n                  // let theid =0;\r\n                  //     // Should call the load method when done and pass the returned server file id\r\n                  //     // this server file id is then used later on when reverting or restoring a file\r\n                  //     // so your server knows which file to return without exposing that info to the client\r\n                  //     request.onload = function() {\r\n                  //         if (request.status >= 200 && request.status < 300) {\r\n                  //             // the load method accepts either a string (id) or an object\r\n                  //           // alert(JSON.stringify(request.responseText))\r\n                  //          // console.log(request.responseText)\r\n                  //        //   alert(request.responseText)\r\n                  //             const returnObjc=JSON.parse(request.responseText)\r\n                  //            // load('https://www.opportunitybank.co.ug/backend/apiImages/uploads'+returnObjc.data);\r\n                  //             //alert(returnObjc.data)\r\n                  //            theid=returnObjc.id\r\n                  //            setdirectorsId(returnObjc.id)\r\n\r\n                  //         }\r\n                  //         else {\r\n                  //             // Can call the error method if something is wrong, should exit after\r\n                  //             error('oh no');\r\n                  //         }\r\n                  //     }.bind(this);\r\n\r\n\r\n\r\n                  //     request.send(formData);\r\n\r\n                  // Should expose an abort method so the request can be cancelled\r\n                  return {\r\n                    abort: () => {\r\n                      // This function is entered if the user has tapped the cancel button\r\n                      // request.abort();\r\n\r\n                      // Let FilePond know the request has been cancelled\r\n                      abort();\r\n                    }\r\n                  };\r\n                },\r\n                revert: (uniqueFileId, load, error) => {\r\n                  //  removeFile(this.state.fid)\r\n                  setdirectorsId(0)\r\n\r\n                  load()\r\n                }\r\n              }\r\n            }></FilePond> :\r\n          <>\r\n            <p className=\"mb-0\">Document Added</p>\r\n            <div style={{ marginTop: \"10px\" }}>\r\n\r\n              <Button\r\n                onClick={() =>\r\n                  handleEdit(\"DIRECTORS\")\r\n                }\r\n\r\n                variant=\"primary btn-xxs\">Replace Document</Button>\r\n              <a style={{ marginLeft: \"10px\" }}\r\n                target=\"_blank\"\r\n                href={directorsObj.path} >\r\n                <Button\r\n\r\n\r\n                  variant=\"success btn-xxs\">View Document</Button>\r\n              </a>\r\n\r\n\r\n            </div>\r\n          </>}\r\n        {/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n        <div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n          {isLoad ?\r\n            <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && directorsId !== 0} />\r\n            </>\r\n            :\r\n            <>\r\n              {directorsId === 0 ? null :\r\n                <Button\r\n                  onClick={() =>\r\n                    handleAddFormSubmit(\"DIRECTORS\", directorsId)\r\n                  }\r\n\r\n                  variant=\"primary btn-xxs\">Save Document</Button>}\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n\t\t\t\t\t</div >\t\r\n: null}\r\n\r\n\r\n\r\n\r\n\r\n{\r\n  bussType === 3 ?\r\n  <div className=\"col-lg-4\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0 pb-0\">\r\n        <h5 className=\"text-primary\">\r\n          {regObj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n            <Icon fontSize=\"medium\"\r\n              style={{\r\n                color: \"green\",\r\n                marginRight: \"5px\",\r\n                marginTop: \"0px\",\r\n              }}\r\n\r\n            >done</Icon>}\r\n          {\" \"}Registration of address - Company form 9/18</h5>\r\n      </div>\r\n      <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n      <div className=\"card-body pt-3\"\t>\r\n        {regObj.type === undefined ?\r\n          <FilePond\r\n            acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n        allowMultiple={false}\r\n        maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n      labelIdle=\"Drag &amp; Drop  Registration of address - Company form 9/18 Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n    server={\r\n      {\r\n        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n          // fieldName is the name of the input field\r\n          // file is the actual file object to send\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"name\", fieldName);\r\n          formData.append(\"type\", 6);\r\n          uploadFiles(formData)\r\n            .then((response) => {\r\n\r\n\r\n              setregId(response.id)\r\n              load(response.id);\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n              alert(JSON.stringify(error))\r\n            });\r\n\r\n          //     const formData = new FormData();\r\n          //     formData.append(fieldName, file, file.name);\r\n\r\n          //     const request = new XMLHttpRequest();\r\n          //    // request.open('POST', '\r\n          //    request.open('POST', '\r\n          //     // Should call the progress method to update the progress to 100% before calling load\r\n          //     // Setting computable to false switches the loading indicator to infinite mode\r\n          //     request.upload.onprogress = (e) => {\r\n          //         progress(e.lengthComputable, e.loaded, e.total);\r\n          //     };\r\n          // let theid =0;\r\n          //     // Should call the load method when done and pass the returned server file id\r\n          //     // this server file id is then used later on when reverting or restoring a file\r\n          //     // so your server knows which file to return without exposing that info to the client\r\n          //     request.onload = function() {\r\n          //         if (request.status >= 200 && request.status < 300) {\r\n          //             // the load method accepts either a string (id) or an object\r\n          //           // alert(JSON.stringify(request.responseText))\r\n          //          // console.log(request.responseText)\r\n          //        //   alert(request.responseText)\r\n          //             const returnObjc=JSON.parse(request.responseText)\r\n          //            // load('https://www.opportunitybank.co.ug/backend/apiImages/uploads'+returnObjc.data);\r\n          //             //alert(returnObjc.data)\r\n          //            theid=returnObjc.id\r\n          //            setregId(returnObjc.id)\r\n\r\n          //         }\r\n          //         else {\r\n          //             // Can call the error method if something is wrong, should exit after\r\n          //             error('oh no');\r\n          //         }\r\n          //     }.bind(this);\r\n\r\n\r\n\r\n          //     request.send(formData);\r\n\r\n          // Should expose an abort method so the request can be cancelled\r\n          return {\r\n            abort: () => {\r\n              // This function is entered if the user has tapped the cancel button\r\n              // request.abort();\r\n\r\n              // Let FilePond know the request has been cancelled\r\n              abort();\r\n            }\r\n          };\r\n        },\r\n        revert: (uniqueFileId, load, error) => {\r\n          //  removeFile(this.state.fid)\r\n          setregId(0)\r\n\r\n          load()\r\n        }\r\n      }\r\n    }></FilePond> :\r\n  <>\r\n    <p className=\"mb-0\">Document Added</p>\r\n    <div style={{ marginTop: \"10px\" }}>\r\n\r\n      <Button\r\n        onClick={() =>\r\n          handleEdit(\"REG_ADDRESS\")\r\n        }\r\n\r\n        variant=\"primary btn-xxs\">Replace Document</Button>\r\n      <a style={{ marginLeft: \"10px\" }}\r\n        target=\"_blank\"\r\n        href={regObj.path} >\r\n        <Button\r\n\r\n\r\n          variant=\"success btn-xxs\">View Document</Button>\r\n      </a>\r\n\r\n\r\n    </div>\r\n  </>\r\n}\r\n{/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n<div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n  {isLoad ?\r\n    <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && regId !== 0} />\r\n    </>\r\n    :\r\n    <>\r\n      {regId === 0 ? null :\r\n        <Button\r\n          onClick={() =>\r\n            handleAddFormSubmit(\"REG_ADDRESS\", regId)\r\n          }\r\n\r\n          variant=\"primary btn-xxs\">Save Document</Button>}\r\n    </>\r\n  }\r\n</div>\t\r\n\t\t\t\t\t\t\t</div >\t\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\t: null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{\r\n  bussType === 3 ?\r\n  <div className=\"col-lg-4\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0 pb-0\">\r\n        <h5 className=\"text-primary\">\r\n          {articlesObj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n            <Icon fontSize=\"medium\"\r\n              style={{\r\n                color: \"green\",\r\n                marginRight: \"5px\",\r\n                marginTop: \"0px\",\r\n              }}\r\n\r\n            >done</Icon>}\r\n          {\" \"}Memorandum and articles of association</h5>\r\n      </div>\r\n      <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n      <div className=\"card-body pt-3\"\t>\r\n        {articlesObj.type === undefined ?\r\n          <FilePond\r\n            acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n        allowMultiple={false}\r\n        maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n      labelIdle=\"Drag &amp; Drop  Memorandum and articles of association Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n    server={\r\n      {\r\n        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n          // fieldName is the name of the input field\r\n          // file is the actual file object to send\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"name\", fieldName);\r\n          formData.append(\"type\", 6);\r\n          uploadFiles(formData)\r\n            .then((response) => {\r\n\r\n\r\n\r\n              setarticlesId(response.id)\r\n              load(response.id);\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n              alert(JSON.stringify(error))\r\n            });\r\n\r\n          //     const formData = new FormData();\r\n          //     formData.append(fieldName, file, file.name);\r\n\r\n          //     const request = new XMLHttpRequest();\r\n\r\n          //     // Should call the progress method to update the progress to 100% before calling load\r\n          //     // Setting computable to false switches the loading indicator to infinite mode\r\n          //     request.upload.onprogress = (e) => {\r\n          //         progress(e.lengthComputable, e.loaded, e.total);\r\n          //     };\r\n          // let theid =0;\r\n          //     // Should call the load method when done and pass the returned server file id\r\n          //     // this server file id is then used later on when reverting or restoring a file\r\n          //     // so your server knows which file to return without exposing that info to the client\r\n          //     request.onload = function() {\r\n          //         if (request.status >= 200 && request.status < 300) {\r\n          //             // the load method accepts either a string (id) or an object\r\n          //           // alert(JSON.stringify(request.responseText))\r\n          //          // console.log(request.responseText)\r\n          //        //   alert(request.responseText)\r\n          //             const returnObjc=JSON.parse(request.responseText)\r\n          //            // load('https://www.opportunitybank.co.ug/backend/apiImages/uploads'+returnObjc.data);\r\n          //             //alert(returnObjc.data)\r\n          //            theid=returnObjc.id\r\n          //            setarticlesId(returnObjc.id)\r\n\r\n          //         }\r\n          //         else {\r\n          //             // Can call the error method if something is wrong, should exit after\r\n          //             error('oh no');\r\n          //         }\r\n          //     }.bind(this);\r\n\r\n\r\n\r\n          //     request.send(formData);\r\n\r\n          // Should expose an abort method so the request can be cancelled\r\n          return {\r\n            abort: () => {\r\n              // This function is entered if the user has tapped the cancel button\r\n              //  request.abort();\r\n\r\n              // Let FilePond know the request has been cancelled\r\n              abort();\r\n            }\r\n          };\r\n        },\r\n        revert: (uniqueFileId, load, error) => {\r\n          //  removeFile(this.state.fid)\r\n          setarticlesId(0)\r\n\r\n          load()\r\n        }\r\n      }\r\n    }></FilePond> :\r\n  <>\r\n    <p className=\"mb-0\">Document Added</p>\r\n    <div style={{ marginTop: \"10px\" }}>\r\n\r\n      <Button\r\n        onClick={() =>\r\n          handleEdit(\"ARTICLES\")\r\n        }\r\n\r\n        variant=\"primary btn-xxs\">Replace Document</Button>\r\n      <a style={{ marginLeft: \"10px\" }}\r\n        target=\"_blank\"\r\n        href={articlesObj.path} >\r\n        <Button\r\n\r\n\r\n          variant=\"success btn-xxs\">View Document</Button>\r\n      </a>\r\n\r\n\r\n    </div>\r\n  </>\r\n}\r\n{/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n<div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n  {isLoad ?\r\n    <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && articlesId !== 0} />\r\n    </>\r\n    :\r\n    <>\r\n      {articlesId === 0 ? null :\r\n        <Button\r\n          onClick={() =>\r\n            handleAddFormSubmit(\"ARTICLES\", articlesId)\r\n          }\r\n\r\n          variant=\"primary btn-xxs\">Save Document</Button>}\r\n    </>\r\n  }\r\n</div>\t\r\n\t\t\t\t\t\t\t</div >\t\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\t\r\n\r\n: null}\r\n\r\n\r\n\r\n\r\n\r\n{\r\n  bussType === 4 ?\r\n  <div className=\"col-lg-4\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0 pb-0\">\r\n        <h5 className=\"text-primary\">\r\n          {partnerobj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n            <Icon fontSize=\"medium\"\r\n              style={{\r\n                color: \"green\",\r\n                marginRight: \"5px\",\r\n                marginTop: \"0px\",\r\n              }}\r\n\r\n            >done</Icon>}\r\n          {\" \"}Partnership Deed</h5>\r\n      </div>\r\n      <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n      <div className=\"card-body pt-3\"\t>\r\n        {partnerobj.type === undefined ?\r\n          <FilePond\r\n            acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n        allowMultiple={false}\r\n        maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n      labelIdle=\"Drag &amp; Drop Partnership Deed Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n    server={\r\n      {\r\n        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n          // fieldName is the name of the input field\r\n          // file is the actual file object to send\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"name\", fieldName);\r\n          formData.append(\"type\", 6);\r\n          uploadFiles(formData)\r\n            .then((response) => {\r\n\r\n\r\n\r\n              setarticlesId(response.id)\r\n              load(response.id);\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n              alert(JSON.stringify(error))\r\n            });\r\n\r\n\r\n          return {\r\n            abort: () => {\r\n              // This function is entered if the user has tapped the cancel button\r\n              //  request.abort();\r\n\r\n              // Let FilePond know the request has been cancelled\r\n              abort();\r\n            }\r\n          };\r\n        },\r\n        revert: (uniqueFileId, load, error) => {\r\n          //  removeFile(this.state.fid)\r\n          setarticlesId(0)\r\n\r\n          load()\r\n        }\r\n      }\r\n    }></FilePond> :\r\n  <>\r\n    <p className=\"mb-0\">Document Added</p>\r\n    <div style={{ marginTop: \"10px\" }}>\r\n\r\n      <Button\r\n        onClick={() =>\r\n          handleEdit(\"PARTNERSHIP_DEED\")\r\n        }\r\n\r\n        variant=\"primary btn-xxs\">Replace Document</Button>\r\n      <a style={{ marginLeft: \"10px\" }}\r\n        target=\"_blank\"\r\n        href={partnerobj.path} >\r\n        <Button\r\n\r\n\r\n          variant=\"success btn-xxs\">View Document</Button>\r\n      </a>\r\n\r\n\r\n    </div>\r\n  </>\r\n}\r\n{/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n<div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n  {isLoad ?\r\n    <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && articlesId !== 0} />\r\n    </>\r\n    :\r\n    <>\r\n      {articlesId === 0 ? null :\r\n        <Button\r\n          onClick={() =>\r\n            handleAddFormSubmit(\"PARTNERSHIP_DEED\", articlesId)\r\n          }\r\n\r\n          variant=\"primary btn-xxs\">Save Document</Button>}\r\n    </>\r\n  }\r\n</div>\t\r\n\t\t\t\t\t\t\t</div >\t\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\t\r\n\r\n: null}\r\n\r\n\r\n\r\n\r\n{\r\n  bussType === 5 ?\r\n  <div className=\"col-lg-4\">\r\n    <div className=\"card\">\r\n      <div className=\"card-header border-0 pb-0\">\r\n        <h5 className=\"text-primary\">\r\n          {byeLawobj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n            <Icon fontSize=\"medium\"\r\n              style={{\r\n                color: \"green\",\r\n                marginRight: \"5px\",\r\n                marginTop: \"0px\",\r\n              }}\r\n\r\n            >done</Icon>}\r\n          {\" \"}Bye Laws or Constitution</h5>\r\n      </div>\r\n      <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n      <div className=\"card-body pt-3\"\t>\r\n        {byeLawobj.type === undefined ?\r\n          <FilePond\r\n            acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n        allowMultiple={false}\r\n        maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n      labelIdle=\"Drag &amp; Drop Bye Laws or Constitution Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n    server={\r\n      {\r\n        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n          // fieldName is the name of the input field\r\n          // file is the actual file object to send\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"name\", fieldName);\r\n          formData.append(\"type\", 6);\r\n          uploadFiles(formData)\r\n            .then((response) => {\r\n\r\n\r\n\r\n              setarticlesId(response.id)\r\n              load(response.id);\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n              alert(JSON.stringify(error))\r\n            });\r\n\r\n\r\n          return {\r\n            abort: () => {\r\n              // This function is entered if the user has tapped the cancel button\r\n              //  request.abort();\r\n\r\n              // Let FilePond know the request has been cancelled\r\n              abort();\r\n            }\r\n          };\r\n        },\r\n        revert: (uniqueFileId, load, error) => {\r\n          //  removeFile(this.state.fid)\r\n          setarticlesId(0)\r\n\r\n          load()\r\n        }\r\n      }\r\n    }></FilePond> :\r\n  <>\r\n    <p className=\"mb-0\">Document Added</p>\r\n    <div style={{ marginTop: \"10px\" }}>\r\n\r\n      <Button\r\n        onClick={() =>\r\n          handleEdit(\"BYE_LAWS_OR_CONSTITUTION\")\r\n        }\r\n\r\n        variant=\"primary btn-xxs\">Replace Document</Button>\r\n      <a style={{ marginLeft: \"10px\" }}\r\n        target=\"_blank\"\r\n        href={partnerobj.path} >\r\n        <Button\r\n\r\n\r\n          variant=\"success btn-xxs\">View Document</Button>\r\n      </a>\r\n\r\n\r\n    </div>\r\n  </>\r\n}\r\n{/* <div className=\"profile-blog \">\r\n\t\t\t\t\t\t\t\t\t<img  src={profile01}  alt=\"profile\" className=\"img-fluid  mb-4 w-100\" />\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/post-details\"> <h4>Darwin Creative Agency Theme</h4> </Link>\r\n\t\t\t\t\t\t\t\t\t<p className=\"mb-0\">\r\n\t\t\t\t\t\t\t\t\t\tA small river named Duden flows by their place and supplies\r\n\t\t\t\t\t\t\t\t\t\tit with the necessary regelialia. It is a paradisematic\r\n\t\t\t\t\t\t\t\t\t\tcountry, in which roasted parts of sentences fly into your\r\n\t\t\t\t\t\t\t\t\t\tmouth.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n<div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n  {isLoad ?\r\n    <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && articlesId !== 0} />\r\n    </>\r\n    :\r\n    <>\r\n      {articlesId === 0 ? null :\r\n        <Button\r\n          onClick={() =>\r\n            handleAddFormSubmit(\"BYE_LAWS_OR_CONSTITUTION\", articlesId)\r\n          }\r\n\r\n          variant=\"primary btn-xxs\">Save Document</Button>}\r\n    </>\r\n  }\r\n</div>\t\r\n\t\t\t\t\t\t\t</div >\t\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\t\r\n\r\n: null}\r\n\r\n\r\n\r\n\r\n<div className=\"col-lg-4\">\r\n  <div className=\"card\">\r\n    <div className=\"card-header border-0 pb-0\">\r\n      <h5 className=\"text-primary\">\r\n        {invoicesbj.type === undefined ? <b style={{ color: \"red\" }}>*</b> :\r\n          <Icon fontSize=\"medium\"\r\n            style={{\r\n              color: \"green\",\r\n              marginRight: \"5px\",\r\n              marginTop: \"0px\",\r\n            }}\r\n\r\n          >done</Icon>}\r\n        {\" \"}3 copies of recently paid invoices (in one pdf file)</h5>\r\n    </div>\r\n    <b style={{ marginLeft: \"15px\" }}>Please save after adding the document</b>\r\n    <div className=\"card-body pt-3\"\t>\r\n      {invoicesbj.type === undefined ?\r\n        <FilePond\r\n          acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n      allowMultiple={false}\r\n      maxFileSize={'2MB'}\r\n      labelIdle=\"Drag &amp; Drop  3 copies of recently paid invoices Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n    server={\r\n      {\r\n        process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n          // fieldName is the name of the input field\r\n          // file is the actual file object to send\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"name\", fieldName);\r\n          formData.append(\"type\", 6);\r\n          uploadFiles(formData)\r\n            .then((response) => {\r\n\r\n              setinvoicesId(response.id)\r\n              load(response.id);\r\n            })\r\n            .catch((error) => {\r\n              alert(error);\r\n              alert(JSON.stringify(error))\r\n            });\r\n\r\n\r\n          // Should expose an abort method so the request can be cancelled\r\n          return {\r\n            abort: () => {\r\n              // This function is entered if the user has tapped the cancel button\r\n              // request.abort();\r\n\r\n              // Let FilePond know the request has been cancelled\r\n              abort();\r\n            }\r\n          };\r\n        },\r\n        revert: (uniqueFileId, load, error) => {\r\n          //  removeFile(this.state.fid)\r\n          setinvoicesId(0)\r\n\r\n          load()\r\n        }\r\n      }\r\n    }></FilePond>:\r\n  <>\r\n    <p className=\"mb-0\">Document Added</p>\r\n    <div style={{ marginTop: \"10px\" }}>\r\n\r\n      <Button\r\n        onClick={() =>\r\n          handleEdit(\"PAID_INVOICES\")\r\n        }\r\n\r\n        variant=\"primary btn-xxs\">Replace Document</Button>\r\n      <a style={{ marginLeft: \"10px\" }}\r\n        target=\"_blank\"\r\n        href={invoicesbj.path} >\r\n        <Button\r\n\r\n\r\n          variant=\"success btn-xxs\">View Document</Button>\r\n      </a>\r\n\r\n\r\n    </div>\r\n  </>}\r\n  <div style={{ marginTop: \"10px\", textAlign: \"right\" }}>\r\n    {isLoad ?\r\n      <> <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoad && invoicesId !== 0} />\r\n      </>\r\n      :\r\n      <>\r\n        {invoicesId === 0 ? null :\r\n          <Button\r\n            onClick={() =>\r\n              handleAddFormSubmit(\"PAID_INVOICES\", invoicesId)\r\n            }\r\n\r\n            variant=\"primary btn-xxs\">Save Document</Button>}\r\n      </>\r\n    }\r\n  </div>\r\n</div>\t\r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          \r\n\r\n\r\n\r\n\r\n\t\t\t\t</div >\t\r\n            </div >\r\n  <div className=\"col-xl-12\">\r\n    <div className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h3 className=\"mb-2 text-black\">\r\n          Uploaded Documents\r\n        </h3>\r\n        <Table responsive className=\"primary-table-bordered\">\r\n          <thead className=\"thead-primary\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Type</th>\r\n              <th scope=\"col\">Status</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {docs.map((option, key) => (\r\n              <tr>\r\n                <th>{key + 1}</th>\r\n                <td>{option.type}</td>\r\n                <td>{option.status === \"VERIFIED\" ? <div style={{ color: \"green\" }}>{option.status} <i className=\"fa fa-check\"></i></div> : (option.status === \"REJECTED\" ? <div style={{ color: \"red\" }}>{option.status} <i className=\"fa fa-times\"></i></div> : option.status)}</td>\r\n                <td>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    href={option.path} >\r\n                    <Button\r\n\r\n\r\n                      variant=\"primary btn-xxs\">View Document</Button></a>\r\n                  <Button\r\n                    onClick={() => openDetails2(option, \"docs\")}\r\n\r\n                    style={{ marginLeft: \"10px\" }}\r\n                    variant=\"success btn-xxs\">View Approval Detail</Button>\r\n\r\n                </td>\r\n              </tr>))}\r\n\r\n          </tbody>\r\n        </Table>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n        </div >\r\n      </div >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default PostDetails;\r\n","import React, { useState, useRef, useCallback, useContext } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport {\r\n  GroupingState,\r\n  IntegratedGrouping,\r\n  SummaryState,\r\n  IntegratedSummary,\r\n  SelectionState,\r\n  IntegratedSelection,\r\n  DataTypeProvider,\r\n  SearchState,\r\n  IntegratedFiltering,\r\n  PagingState,\r\n  IntegratedPaging,\r\n  SortingState,\r\n  IntegratedSorting,\r\n  TreeDataState,\r\n  CustomTreeData,\r\n  FilteringState,\r\n} from \"@devexpress/dx-react-grid\";\r\nimport { GridExporter } from \"@devexpress/dx-react-grid-export\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableHeaderRow,\r\n  TableGroupRow,\r\n  GroupingPanel,\r\n  TableSummaryRow,\r\n  TableSelection,\r\n  DragDropProvider,\r\n  Toolbar,\r\n  ExportPanel,\r\n  SearchPanel,\r\n  PagingPanel,\r\n  ColumnChooser,\r\n  TableColumnVisibility,\r\n  TableColumnResizing,\r\n  TableColumnReordering,\r\n  TableFixedColumns,\r\n  VirtualTable,\r\n  TableTreeColumn,\r\n  TableFilterRow,\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport Input from \"@material-ui/core/Input\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport saveAs from \"file-saver\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  numericInput: {\r\n    fontSize: \"14px\",\r\n    textAlign: \"right\",\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nconst CurrencyEditorBase = ({ value, onValueChange, classes }) => {\r\n  const handleChange = (event) => {\r\n    const { value: targetValue } = event.target;\r\n    if (targetValue.trim() === \"\") {\r\n      onValueChange();\r\n      return;\r\n    }\r\n    onValueChange(parseInt(targetValue, 10));\r\n  };\r\n  return (\r\n    <Input\r\n      type=\"number\"\r\n      classes={{\r\n        input: classes.numericInput,\r\n        root: classes.root,\r\n      }}\r\n      fullWidth\r\n      value={value === undefined ? \"\" : value}\r\n      inputProps={{\r\n        min: 0,\r\n        placeholder: \"Filter...\",\r\n      }}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nCurrencyEditorBase.propTypes = {\r\n  value: PropTypes.number,\r\n  onValueChange: PropTypes.func.isRequired,\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nCurrencyEditorBase.defaultProps = {\r\n  value: undefined,\r\n};\r\n\r\nconst CurrencyEditor = withStyles(styles)(CurrencyEditorBase);\r\n\r\nconst DateFormatter = ({ value }) => <span>{value.toLocaleDateString()}</span>;\r\n\r\nconst DateTypeProvider = (props) => (\r\n  <DataTypeProvider {...props} formatterComponent={DateFormatter} />\r\n);\r\n\r\nconst onSave = (workbook) => {\r\n  workbook.xlsx.writeBuffer().then((buffer) => {\r\n    saveAs(\r\n      new Blob([buffer], { type: \"application/octet-stream\" }),\r\n      \"DataGrid.xlsx\"\r\n    );\r\n  });\r\n};\r\n\r\nconst columns = [];\r\nconst dateColumns = [];\r\nconst groupSummaryItems = [];\r\nconst totalSummaryItems = [];\r\n\r\nfunction MyComponent(props) {\r\n  const defaultExpandedGroups = props.defaultExpandedGroups;\r\n  const [grouping, setGrouping] = useState(props.grouping);\r\n\r\n  //const theColor = useContext(ThemeContext2);\r\n\r\n  const customizeHeader = (worksheet) => {\r\n    const generalStyles = {\r\n      font: { bold: true },\r\n      fill: {\r\n        type: \"pattern\",\r\n        pattern: \"solid\",\r\n        fgColor: { argb: \"D3D3D3\" },\r\n        bgColor: { argb: \"D3D3D3\" },\r\n      },\r\n      alignment: { horizontal: \"left\" },\r\n    };\r\n    for (let rowIndex = 1; rowIndex < 6; rowIndex += 1) {\r\n      worksheet.mergeCells(rowIndex, 1, rowIndex, 3);\r\n      worksheet.mergeCells(rowIndex, 4, rowIndex, 6);\r\n      Object.assign(worksheet.getRow(rowIndex).getCell(1), generalStyles);\r\n      Object.assign(worksheet.getRow(rowIndex).getCell(3), generalStyles);\r\n    }\r\n    worksheet.getRow(1).height = 20;\r\n    worksheet.getRow(1).getCell(1).font = { bold: true, size: 16 };\r\n    worksheet.getRow(1).getCell(4).numFmt = \"d mmmm yyyy\";\r\n    worksheet.getRow(1).getCell(4).font = { bold: true, size: 16 };\r\n    worksheet.getColumn(1).values = [\r\n      \"Uganda Christian University:\",\r\n      \"A Center of Excellence in the Heart of Africa:\",\r\n      \"Adress:\",\r\n      \"Web:\",\r\n    ];\r\n    worksheet.getColumn(4).values = [\r\n      new Date(),\r\n      \"Pesasa\",\r\n      \"P.O.Box 14, Kampala Uganda\",\r\n      \"www.pesasa.ug\",\r\n    ];\r\n    worksheet.addRow({});\r\n  };\r\n\r\n  const customizeFooter = (worksheet) => {\r\n    const { lastRow } = worksheet;\r\n    let currentRowIndex = lastRow.number + 2;\r\n    for (let rowIndex = 0; rowIndex < 3; rowIndex += 1) {\r\n      worksheet.mergeCells(\r\n        currentRowIndex + rowIndex,\r\n        1,\r\n        currentRowIndex + rowIndex,\r\n        6\r\n      );\r\n      Object.assign(worksheet.getRow(currentRowIndex + rowIndex).getCell(1), {\r\n        font: { bold: true },\r\n        alignment: { horizontal: \"right\" },\r\n      });\r\n    }\r\n    worksheet.getRow(currentRowIndex).getCell(1).value =\r\n      \"Exported From Pesasa\";\r\n    currentRowIndex += 1;\r\n    worksheet.getRow(currentRowIndex).getCell(1).value = \"pesasa.ug\";\r\n    currentRowIndex += 1;\r\n    worksheet.getRow(currentRowIndex).getCell(1).value = \"Pesasa\";\r\n    worksheet.getRow(currentRowIndex).getCell(1).font = { italic: true };\r\n  };\r\n\r\n  const [selection, setSelection] = useState([]);\r\n\r\n  let fileName = \"Pesasa.xlsx\";\r\n\r\n  if (props.fileName != undefined && props.fileName !== null) {\r\n    fileName = props.fileName + \"_Pesasa.xlsx\";\r\n  }\r\n\r\n  const onSave = (workbook) => {\r\n    workbook.xlsx.writeBuffer().then((buffer) => {\r\n      saveAs(\r\n        new Blob([buffer], { type: \"application/octet-stream\" }),\r\n        fileName\r\n      );\r\n    });\r\n  };\r\n\r\n  const exporterRef = useRef(null);\r\n\r\n  const startExport = useCallback(\r\n    (options) => {\r\n      exporterRef.current.exportGrid(options);\r\n    },\r\n    [exporterRef]\r\n  );\r\n\r\n  // const styles2 = {\r\n  //   white: {\r\n  //     color: theColor.color,\r\n  //   },\r\n  // };\r\n\r\n  const getClassByValue = (value, classes) => {\r\n    // if (value === \"pending\") return classes.pending;\r\n    // if (value === \"ATUHAIRE Precious\") return classes.declined;\r\n    // if (value === \"blue\") return classes.blue;\r\n    return classes.white;\r\n  };\r\n\r\n  const updateSelectionState = (selection) => {\r\n    setSelection(selection);\r\n    try {\r\n      props.passSelection(selection);\r\n    } catch (error) { }\r\n  };\r\n\r\n  const getRowId = (rows) => rows.id;\r\n\r\n  const TableCell = withStyles(\r\n    //   styles2,\r\n    \"TableCell\"\r\n  )(({ value, classes, ...restProps }) => (\r\n    <Table.Cell\r\n      className={getClassByValue(value, classes)}\r\n      value={value}\r\n      {...restProps}\r\n    />\r\n  ));\r\n\r\n  const [hiddenColumnNames, setHiddenColumnNames] = useState(\r\n    props.defaultHiddenColumnNames\r\n  );\r\n\r\n  let mobileColumns = props.mobileHiddenColumnNames ?? [];\r\n\r\n  if (mobileColumns.length === 0 && props.columns.length >= 2) {\r\n    for (let index = 1; index < props.columns.length - 1; index++) {\r\n      mobileColumns.push(props.columns[index].name);\r\n    }\r\n  }\r\n\r\n  const [mobileHiddenColumns, setMobileHiddenColumns] = useState([\r\n    ...new Set(mobileColumns),\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"showTable\">\r\n        <Grid\r\n          rows={props.rows}\r\n          columns={props.columns}\r\n          getRowId={props.getRowId ? getRowId : null}\r\n        >\r\n          <DragDropProvider />\r\n          <DateTypeProvider for={dateColumns} />\r\n\r\n          <SortingState\r\n            defaultSorting={\r\n              props.defaultSorting !== null || props.defaultSorting != undefined\r\n                ? props.defaultSorting\r\n                : []\r\n            }\r\n          />\r\n\r\n          <GroupingState\r\n            defaultExpandedGroups={defaultExpandedGroups}\r\n            grouping={grouping}\r\n            onGroupingChange={setGrouping}\r\n          />\r\n\r\n          <SearchState defaultValue=\"\" />\r\n\r\n          <DataTypeProvider\r\n            for={\r\n              props.currencyColumns !== undefined &&\r\n                props.currencyColumns.length > 0\r\n                ? props.currencyColumns\r\n                : []\r\n            }\r\n            availableFilterOperations={[\r\n              \"greaterThanOrEqual\",\r\n              \"lessThan\",\r\n              \"lessThanOrEqual\",\r\n              \"equal\",\r\n              \"notEqual\",\r\n              \"greaterThan\",\r\n            ]}\r\n            editorComponent={CurrencyEditor}\r\n          />\r\n          {props.filteringStateColumnExtensions !== undefined &&\r\n            props.filteringStateColumnExtensions.length > 0 ? (\r\n            <FilteringState\r\n              columnExtensions={props.filteringStateColumnExtensions}\r\n              defaultFilters={[]}\r\n            />\r\n          ) : null}\r\n\r\n          <IntegratedFiltering />\r\n          {props.totalSummaryItems !== undefined &&\r\n            props.totalSummaryItems.length > 0 ? (\r\n            <SummaryState\r\n              totalItems={props.totalSummaryItems}\r\n              groupItems={\r\n                props.groupSummaryItems !== undefined &&\r\n                  props.groupSummaryItems.length > 0\r\n                  ? props.groupSummaryItems\r\n                  : []\r\n              }\r\n            />\r\n          ) : null}\r\n          <PagingState\r\n            defaultPageSize={\r\n              props.defaultPageSize !== null ||\r\n                props.defaultPageSize !== undefined\r\n                ? props.defaultPageSize\r\n                : 30\r\n            }\r\n            defaultCurrentPage={0}\r\n          />\r\n\r\n          {props.mySelection ? (\r\n            <SelectionState\r\n              selection={props.selection}\r\n              onSelectionChange={props.changeSelection}\r\n            />\r\n          ) : (\r\n            <SelectionState\r\n              selection={selection}\r\n              //onSelectionChange={setSelection}\r\n              onSelectionChange={(selection) => {\r\n                updateSelectionState(selection);\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedGrouping />\r\n\r\n          {props.totalSummaryItems !== undefined &&\r\n            props.totalSummaryItems.length > 0 ? (\r\n            <IntegratedSummary />\r\n          ) : null}\r\n\r\n          <IntegratedSelection />\r\n          <IntegratedPaging />\r\n          <Table\r\n            cellComponent={TableCell}\r\n            columnExtensions={props.tableColumnExtensions}\r\n          />\r\n          {props.defaultColumnWidths !== undefined &&\r\n            props.defaultColumnWidths.length > 0 ? (\r\n            <TableColumnResizing\r\n              defaultColumnWidths={props.defaultColumnWidths}\r\n            />\r\n          ) : null}\r\n          {props.defaultOrder !== undefined && props.defaultOrder.length > 0 ? (\r\n            <TableColumnReordering defaultOrder={props.defaultOrder} />\r\n          ) : null}\r\n\r\n          {props.infiniteScrolling ? <VirtualTable /> : null}\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {props.hideDataExport ? (\r\n            [\r\n              props.showSelection ? (\r\n                <TableSelection selectByRowClick showSelectAll={true} />\r\n              ) : null,\r\n            ]\r\n          ) : (\r\n            <TableSelection selectByRowClick showSelectAll={true} />\r\n          )}\r\n\r\n          <TableGroupRow\r\n            showColumnsWhenGrouped={props.showColumnsWhenGrouped}\r\n          />\r\n\r\n          <TableColumnVisibility\r\n            hiddenColumnNames={hiddenColumnNames}\r\n            onHiddenColumnNamesChange={setHiddenColumnNames}\r\n          />\r\n\r\n          <Toolbar />\r\n\r\n          {props.totalSummaryItems !== undefined &&\r\n            props.totalSummaryItems.length > 0 ? (\r\n            <TableSummaryRow />\r\n          ) : null}\r\n          {props.filterRow ? <TableFilterRow showFilterSelector /> : null}\r\n          <TableFixedColumns\r\n            leftColumns={\r\n              props.leftColumns !== undefined && props.leftColumns.length > 0\r\n                ? props.leftColumns\r\n                : []\r\n            }\r\n            rightColumns={\r\n              props.rightColumns !== undefined && props.rightColumns.length > 0\r\n                ? props.rightColumns\r\n                : []\r\n            }\r\n          />\r\n\r\n          {!props.hideGrouping ? <GroupingPanel showGroupingControls /> : null}\r\n\r\n          {!props.hideSearchPanel ? <SearchPanel /> : null}\r\n\r\n          <ColumnChooser />\r\n\r\n          {props.hideDataExport ? null : (\r\n            <ExportPanel startExport={startExport} />\r\n          )}\r\n\r\n          {!props.hidePagingPanel ? (\r\n            <PagingPanel pageSizes={[10, 20, 30, 50, 70, 100, 0]} />\r\n          ) : null}\r\n        </Grid>\r\n      </div>\r\n      {/* \r\n      <div className=\"showMobileTable\">\r\n        <Grid\r\n          rows={props.rows}\r\n          columns={props.columns}\r\n          getRowId={props.getRowId ? getRowId : null}\r\n        >\r\n          <DragDropProvider />\r\n          <DateTypeProvider for={dateColumns} />\r\n\r\n          <SortingState\r\n            defaultSorting={\r\n              props.defaultSorting !== null || props.defaultSorting != undefined\r\n                ? props.defaultSorting\r\n                : []\r\n            }\r\n          />\r\n\r\n          <GroupingState\r\n            defaultExpandedGroups={defaultExpandedGroups}\r\n            // grouping={grouping}\r\n            onGroupingChange={setGrouping}\r\n          />\r\n\r\n          <SearchState defaultValue=\"\" />\r\n\r\n          <DataTypeProvider\r\n            for={\r\n              props.currencyColumns !== undefined &&\r\n              props.currencyColumns.length > 0\r\n                ? props.currencyColumns\r\n                : []\r\n            }\r\n            availableFilterOperations={[\r\n              \"greaterThanOrEqual\",\r\n              \"lessThan\",\r\n              \"lessThanOrEqual\",\r\n              \"equal\",\r\n              \"notEqual\",\r\n              \"greaterThan\",\r\n            ]}\r\n            editorComponent={CurrencyEditor}\r\n          />\r\n          {props.filteringStateColumnExtensions !== undefined &&\r\n          props.filteringStateColumnExtensions.length > 0 ? (\r\n            <FilteringState\r\n              columnExtensions={props.filteringStateColumnExtensions}\r\n              defaultFilters={[]}\r\n            />\r\n          ) : null}\r\n\r\n          <IntegratedFiltering />\r\n          {props.totalSummaryItems !== undefined &&\r\n          props.totalSummaryItems.length > 0 ? (\r\n            <SummaryState\r\n              totalItems={props.totalSummaryItems}\r\n              groupItems={\r\n                props.groupSummaryItems !== undefined &&\r\n                props.groupSummaryItems.length > 0\r\n                  ? props.groupSummaryItems\r\n                  : []\r\n              }\r\n            />\r\n          ) : null}\r\n          <PagingState\r\n            defaultPageSize={\r\n              props.defaultPageSize !== null ||\r\n              props.defaultPageSize !== undefined\r\n                ? props.defaultPageSize\r\n                : 30\r\n            }\r\n            defaultCurrentPage={0}\r\n          />\r\n\r\n          {props.mySelection ? (\r\n            <SelectionState\r\n              selection={props.selection}\r\n              onSelectionChange={props.changeSelection}\r\n            />\r\n          ) : (\r\n            <SelectionState\r\n              selection={selection}\r\n              //onSelectionChange={setSelection}\r\n              onSelectionChange={(selection) => {\r\n                updateSelectionState(selection);\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <IntegratedSorting />\r\n          <IntegratedGrouping />\r\n\r\n          {props.totalSummaryItems !== undefined &&\r\n          props.totalSummaryItems.length > 0 ? (\r\n            <IntegratedSummary />\r\n          ) : null}\r\n\r\n          <IntegratedSelection />\r\n          <IntegratedPaging />\r\n          <Table\r\n            cellComponent={TableCell}\r\n            columnExtensions={props.tableColumnExtensions}\r\n          />\r\n          {props.defaultColumnWidths !== undefined &&\r\n          props.defaultColumnWidths.length > 0 ? (\r\n            <TableColumnResizing\r\n              defaultColumnWidths={props.defaultColumnWidths}\r\n            />\r\n          ) : null}\r\n          {props.defaultOrder !== undefined && props.defaultOrder.length > 0 ? (\r\n            <TableColumnReordering defaultOrder={props.defaultOrder} />\r\n          ) : null}\r\n\r\n          {props.infiniteScrolling ? <VirtualTable /> : null}\r\n          <TableHeaderRow showSortingControls />\r\n\r\n          {props.hideDataExport ? (\r\n            [\r\n              props.showSelection ? (\r\n                <TableSelection selectByRowClick showSelectAll={true} />\r\n              ) : null,\r\n            ]\r\n          ) : (\r\n            <TableSelection selectByRowClick showSelectAll={true} />\r\n          )}\r\n\r\n          <TableGroupRow\r\n            showColumnsWhenGrouped={props.showColumnsWhenGrouped}\r\n          />\r\n\r\n          <TableColumnVisibility\r\n            hiddenColumnNames={mobileHiddenColumns}\r\n            onHiddenColumnNamesChange={setMobileHiddenColumns}\r\n          />\r\n\r\n          <Toolbar />\r\n\r\n          {props.totalSummaryItems !== undefined &&\r\n          props.totalSummaryItems.length > 0 ? (\r\n            <TableSummaryRow />\r\n          ) : null}\r\n          {props.filterRow ? <TableFilterRow showFilterSelector /> : null}\r\n          <TableFixedColumns\r\n            leftColumns={\r\n              props.leftColumns !== undefined && props.leftColumns.length > 0\r\n                ? props.leftColumns\r\n                : []\r\n            }\r\n            rightColumns={\r\n              props.rightColumns !== undefined && props.rightColumns.length > 0\r\n                ? props.rightColumns\r\n                : []\r\n            }\r\n          />\r\n\r\n          {!props.hideGrouping ? <GroupingPanel showGroupingControls /> : null}\r\n\r\n          {!props.hideSearchPanel ? <SearchPanel /> : null}\r\n\r\n          <ColumnChooser />\r\n\r\n          {props.hideDataExport ? null : (\r\n            <ExportPanel startExport={startExport} />\r\n          )}\r\n\r\n          {!props.hidePagingPanel ? (\r\n            <PagingPanel pageSizes={[10, 20, 30, 50, 70, 100, 0]} />\r\n          ) : null}\r\n        </Grid>\r\n      </div> */}\r\n\r\n      <GridExporter\r\n        ref={exporterRef}\r\n        rows={props.exportRow}\r\n        columns={props.exportColumns}\r\n        grouping={grouping}\r\n        totalSummaryItems={\r\n          props.totalSummaryItems !== undefined &&\r\n            props.totalSummaryItems.length > 0\r\n            ? props.totalSummaryItems\r\n            : []\r\n        }\r\n        groupSummaryItems={\r\n          props.groupSummaryItems !== undefined &&\r\n            props.groupSummaryItems.length > 0\r\n            ? props.groupSummaryItems\r\n            : []\r\n        }\r\n        customizeHeader={customizeHeader}\r\n        customizeFooter={customizeFooter}\r\n        selection={props.mySelection ? props.selection : selection}\r\n        onSave={onSave}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(MyComponent);\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["PostDetails","sendMessage","setSendMessage","useState","theId","setId","docs","setDocs","isLoad","seLoad","isLoad2","seLoad2","incompId","setIncomp","incompObj","setIncompObje","directorsId","setdirectorsId","directorsObj","setdirectorsObj","regId","setregId","regObj","setregObj","articlesId","setarticlesId","articlesObj","setarticlesObj","postModal2","setPostModal2","comments","setComments","bussType","setBussType","invoicesId","setinvoicesId","invoicesbj","setinvoicesbj","partnerobj","setpartnerobj","byeLawobj","setbyeLawobj","businessInfo","setBusinessInfo","handleEdit","type","id","openDetails2","data","process","getProcessComments","then","response","catch","error","console","log","swal","message","getComments","processId","getDocs","getUserFiles","map","option","key","_jsxs","style","color","children","_jsx","className","dateAdded","Date","toDateString","useEffect","getClientBussiness","isIn","handleAddFormSubmit","fileId","newContact","addFile","RotateSpinner","size","loading","Dialog","disableEnforceFocus","fullWidth","maxWidth","open","onClose","DialogTitle","DialogContent","TableExport","hideDataExport","rows","columns","name","title","defaultExpandedGroups","grouping","defaultHiddenColumnNames","defaultPageSize","hideSelectionExport","infiniteScrolling","fileName","DialogActions","width","overflow","onClick","padding","undefined","Icon","fontSize","marginRight","marginTop","marginLeft","FilePond","acceptedFileTypes","allowMultiple","maxFileSize","labelIdle","server","fieldName","file","metadata","load","progress","abort","transfer","options","formData","FormData","append","uploadFiles","alert","JSON","stringify","revert","uniqueFileId","_Fragment","Button","variant","target","href","path","textAlign","Table","responsive","scope","status","styles","cardCategoryWhite","margin","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","numericInput","CurrencyEditorBase","_ref","value","onValueChange","classes","Input","input","root","inputProps","min","placeholder","onChange","event","targetValue","trim","parseInt","defaultProps","CurrencyEditor","withStyles","DateFormatter","_ref2","toLocaleDateString","DateTypeProvider","props","DataTypeProvider","formatterComponent","dateColumns","_props$mobileHiddenCo","setGrouping","selection","setSelection","exporterRef","useRef","startExport","useCallback","current","exportGrid","getClassByValue","white","TableCell","_ref3","restProps","Cell","hiddenColumnNames","setHiddenColumnNames","mobileColumns","mobileHiddenColumnNames","length","index","push","mobileHiddenColumns","setMobileHiddenColumns","Set","Grid","getRowId","DragDropProvider","for","SortingState","defaultSorting","GroupingState","onGroupingChange","SearchState","defaultValue","currencyColumns","availableFilterOperations","editorComponent","filteringStateColumnExtensions","FilteringState","columnExtensions","defaultFilters","IntegratedFiltering","totalSummaryItems","SummaryState","totalItems","groupItems","groupSummaryItems","PagingState","defaultCurrentPage","mySelection","SelectionState","onSelectionChange","changeSelection","passSelection","updateSelectionState","IntegratedSorting","IntegratedGrouping","IntegratedSummary","IntegratedSelection","IntegratedPaging","cellComponent","tableColumnExtensions","defaultColumnWidths","TableColumnResizing","defaultOrder","TableColumnReordering","VirtualTable","TableHeaderRow","showSortingControls","showSelection","TableSelection","selectByRowClick","showSelectAll","TableGroupRow","showColumnsWhenGrouped","TableColumnVisibility","onHiddenColumnNamesChange","Toolbar","TableSummaryRow","filterRow","TableFilterRow","showFilterSelector","TableFixedColumns","leftColumns","rightColumns","hideGrouping","GroupingPanel","showGroupingControls","hideSearchPanel","SearchPanel","ColumnChooser","ExportPanel","hidePagingPanel","PagingPanel","pageSizes","GridExporter","ref","exportRow","exportColumns","customizeHeader","worksheet","generalStyles","font","bold","fill","pattern","fgColor","argb","bgColor","alignment","horizontal","rowIndex","mergeCells","Object","assign","getRow","getCell","height","numFmt","getColumn","values","addRow","customizeFooter","lastRow","currentRowIndex","number","italic","onSave","workbook","xlsx","writeBuffer","buffer","saveAs","Blob","React","bsPrefix","striped","bordered","borderless","hover","decoratedBsPrefix","useBootstrapPrefix","classNames","concat","table","responsiveClass"],"sourceRoot":""}