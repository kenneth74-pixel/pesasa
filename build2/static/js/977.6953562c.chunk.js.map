{"version":3,"file":"static/js/977.6953562c.chunk.js","mappings":"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","sources":["jsx/components/table/FilteringTable/Agreement.js","jsx/components/table/FilteringTable/BankDetail.js","jsx/components/table/FilteringTable/CreditLimitApplication.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { countryCodes } from \"./appData.js\"\r\nimport {\r\n  addClientCreditLimit, getClientFacilityAdmin, addClientFacilityAdmin,\r\n\r\n  verifyClientFacilityAdmin,\r\n  uploadFiles\r\n} from \"../../../../util/APIUtils.js\";\r\nimport 'filepond/dist/filepond.min.css';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport { FilePond } from 'react-filepond';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport swal from \"sweetalert\";\r\nconst StepOne = (props) => {\r\n  const [postModal, setPostModal] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [fileId, setIncomp] = useState(0);\r\n\r\n  const [disableInput, setdisableInput] = useState(false);\r\n  const [showFilePond, setshowFilePond] = useState(true);\r\n  const [creditFacility, setFacility] = useState({});\r\n  const country = countryCodes.map(data => (\r\n\r\n    <option value={data.name} > {\" \" + data.name + \" \"}</option>\r\n  ))\r\n\r\n  const codes = countryCodes.map(data => (\r\n\r\n    <option value={data.dial_code} > {\" \" + data.name + \" (\" + data.dial_code + \" )\"}</option>\r\n  ))\r\n\r\n  const [addFormData, setAddFormData] = useState({\r\n    id: null,\r\n    currency: '',\r\n    invoices: '',\r\n    credit: '',\r\n    limit: '',\r\n    hasLoan: '',\r\n    hasLien: ''\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    loadFacility()\r\n    setdisableInput(true)\r\n    setAddFormData(props.data)\r\n\r\n  }, []);\r\n\r\n\r\n  function loadFacility() {\r\n    getClientFacilityAdmin({ clientid: props.client.id })\r\n      .then((response) => {\r\n        if (response.adminFile.path !== null) {\r\n          setIncomp(0)\r\n          setshowFilePond(false)\r\n        }\r\n        //  alert(JSON.stringify(response))\r\n        setFacility(response)\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  const years = range(2021, (new Date()).getFullYear());\r\n\r\n  function range(start, end) {\r\n    const theYears = []\r\n\r\n    for (var m = start; m < end; m++) {\r\n      theYears.push(m)\r\n    }\r\n    theYears.push(end);\r\n    return theYears;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleDateChange = (event) => {\r\n    //\talert(JSON.stringify(event))\r\n    // event.preventDefault();    \r\n    const fieldName = \"dob\";\r\n    const fieldValue = event;\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    var error = false;\r\n    var errorMsg = '';\r\n    addFormData.limit = addFormData.limit.split(\",\").join(\"\")\r\n    addFormData.invoices = addFormData.invoices.split(\",\").join(\"\")\r\n\r\n    if (addFormData.currency === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please choose credit limit currency';\r\n    } else if (addFormData.invoices === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average of total value of invoices issued per month';\r\n    }\r\n\r\n    else if (addFormData.credit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average credit period of invoices';\r\n    }\r\n\r\n    else if (addFormData.limit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add limit Requested (Minimum Ugshs 5,000,000 )';\r\n\r\n    }\r\n\r\n    else if (addFormData.limit < 5000000) {\r\n      error = true;\r\n      errorMsg = 'Limit requested is below the 5,000,000 minimum';\r\n    }\r\n\r\n    else if (addFormData.hasLoan === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please select if you have a loan';\r\n    }\r\n\r\n    else if (addFormData.hasLien === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please indicate if there is a lien over your receivables or debenture over floating assets/debtors/receivables';\r\n    }\r\n\r\n\r\n\r\n\r\n    if (!error) {\r\n\r\n\r\n\r\n      console.log(addFormData)\r\n      //  \talert(JSON.stringify(addFormData))\r\n      //    setLoading(true)\r\n      //  props.history.push(\r\n      //    {\r\n      //        pathname: '/login',\r\n      //        state: {  email:addFormData.email }\r\n      //    }\r\n      //   // '/page-register'\r\n      //    );  \r\n\r\n      addClientCreditLimit(addFormData)\r\n        .then((response) => {\r\n          setPostModal(false);\r\n          swal('Good job!', 'Successfully saved data', \"success\");\r\n          //    getTheDirectors()\r\n          //props.setEmail(addFormData.email)\r\n          setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          swal('Oops', error.message, \"error\");\r\n        });\r\n\r\n      //  addFormData.Cust_Name = addFormData.Location = addFormData.Date_Join = '';         \r\n\r\n    } else {\r\n      swal('Oops', errorMsg, \"error\");\r\n    }\r\n  };\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  function numberWithCommas(x) {\r\n    if (x !== null && x !== undefined) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const handleAddFormChangeNumber = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value.split(\",\").join(\"\");\r\n    // alert(fieldValue)\r\n    if (!isNaN(fieldValue)) {\r\n      const newFormData = { ...addFormData };\r\n      newFormData[fieldName] = fieldValue;\r\n      setAddFormData(newFormData);\r\n    }\r\n  };\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value;\r\n    // alert(fieldValue)\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n  return (\r\n    <section style={{ marginTop: \"10px\" }}>\r\n\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>Credit Facility Agreement</h4>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n\r\n\r\n        <div className=\"col-md-3 mb-2\">\r\n          <label className=\"text-black font-w500\"> Sent Agreement</label>\r\n          <div className=\"\">\r\n\r\n            {creditFacility.adminFile?.path !== null ?\r\n\r\n              <a\r\n                target=\"_blank\"\r\n                href={creditFacility.adminFile?.path} download>\r\n\r\n                <b className=\"text-primary\">View Agreement Sent</b>\r\n              </a>\r\n              : null}\r\n\r\n            {showFilePond ? <FilePond\r\n              acceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n            allowMultiple={true}\r\n            maxFileSize={'2MB'}\r\n//</GridItem>server=\r\n          labelIdle=\"Drag &amp; Drop  Credit Limit Facilitaion Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n        server={\r\n          {\r\n            process: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n              // fieldName is the name of the input field\r\n              // file is the actual file object to send\r\n              const formData = new FormData();\r\n              formData.append(\"file\", file);\r\n              formData.append(\"name\", fieldName);\r\n              formData.append(\"type\", 6);\r\n              uploadFiles(formData)\r\n                .then((response) => {\r\n\r\n                  setIncomp(response.id)\r\n                  load(response.id);\r\n                })\r\n                .catch((error) => {\r\n                  alert(error);\r\n                  alert(JSON.stringify(error))\r\n                });\r\n\r\n              return {\r\n                abort: () => {\r\n                  // This function is entered if the user has tapped the cancel button\r\n                  // request.abort();\r\n\r\n                  // Let FilePond know the request has been cancelled\r\n                  abort();\r\n                }\r\n              };\r\n            },\r\n            revert: (uniqueFileId, load, error) => {\r\n              //  removeFile(this.state.fid)\r\n              setIncomp(0)\r\n\r\n              load()\r\n            }\r\n          }\r\n        }></FilePond>:\r\n\r\n      <Button\r\n        variant=\"warning btn-xxs\"\r\n        style={{ width: \"auto\", marginLeft: \"10px\" }} className=\"ml-4\" onClick={(e) => setshowFilePond(true)} >\r\n        Change File\r\n\r\n      </Button>\r\n}\r\n\r\n      {fileId !== 0 ?\r\n        (\r\n          isLoading ?\r\n            <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} /> :\r\n            <Button\r\n              variant=\"primary btn-xxs\"\r\n              style={{ width: \"auto\" }} onClick={(e) => {\r\n                setLoading(true)\r\n                addClientFacilityAdmin({\r\n                  clientid: props.client.id,\r\n                  fileId: fileId,\r\n                  staus: \"PENDING_APPROVAL\"\r\n\r\n                })\r\n                  .then((response) => {\r\n                    setLoading(false)\r\n                    swal('Facility Agreement Sent!', 'Successfully sent file', \"success\");\r\n                    loadFacility()\r\n\r\n                  })\r\n                  .catch((error) => {\r\n                    setLoading(false)\r\n                    console.log(error);\r\n                  });\r\n              }} >\r\n              Send to client\r\n\r\n            </Button>) : null\r\n      }\r\n      <span className=\"validation-text\"></span>\r\n    </div>\r\n               \r\n            </div >\r\n          \r\n          \r\n            <div  className=\"col-md-3 mb-2\">\r\n\r\n<div className=\"form-group mb-3\">\r\n<label className=\"text-black font-w500\">Signed Agreement\r\n</label>\r\n<div className=\"contact-name\">\r\n<div className=\"form-group mb-0\">\r\n{creditFacility.clientFile?.path===null?\"Client has not submited yet\":\r\n\r\n<a \r\n\t\t\t target=\"_blank\"\r\n\t\t\t href={creditFacility.clientFile?.path} download>\r\n\r\n       <b className=\"text-primary\">View Agreement Signed</b> \r\n       </a>\r\n}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<div  className=\"col-md-3 mb-2\">\r\n\r\n<div className=\"form-group mb-3\">\r\n<label className=\"text-black font-w500\">Status\r\n</label>\r\n<div className=\"contact-name\">\r\n<div className=\"form-group mb-0\">\r\n{creditFacility.clientFile?.path===null?\"Not applicable\":creditFacility.staus}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n          \r\n<div  className=\"col-md-3 mb-2\">\r\n\r\n<div className=\"form-group mb-3\">\r\n<label className=\"text-black font-w500\">Actions\r\n</label>\r\n<div className=\"contact-name\">\r\n<div className=\"form-group mb-0\">\r\n  {isLoading?\r\n    <RotateSpinner  size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} />:\r\n<Button \r\n  variant=\"primary btn-xxs\"\r\ndisabled={creditFacility.clientFile?.path===null}\r\nstyle={{width:\"auto\"}}  className=\"btn btn-info\" \r\n\r\n\r\nonClick={(e)=>{\r\n  setLoading(true)\r\n  verifyClientFacilityAdmin({id:creditFacility.id,\r\n    staus:\"VERIFIED\"\r\n  \r\n  })\r\n  .then((response) => {\r\n    setLoading(false)\r\n    swal('Facility Agreement Approved!', 'Successfully approved Credit Facility Agreement', \"success\");\r\n   loadFacility()\r\n    \r\n  })\r\n  .catch((error) => {\r\n    setLoading(false)\r\n    console.log(error);\r\n  });\r\n}}\r\n>\r\n            Approve\r\n \r\n             </Button>}\r\n\r\n\r\n\r\n\r\n             {isLoading?\r\n    <RotateSpinner  size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} />:\r\n<Button \r\n  variant=\"danger btn-xxs\"\r\ndisabled={creditFacility.clientFile?.path===null}\r\nstyle={{width:\"auto\", marginLeft:\"10px\"}}  className=\"btn btn-info\" \r\n\r\n\r\nonClick={(e)=>{\r\n  setLoading(true)\r\n  verifyClientFacilityAdmin({id:creditFacility.id,\r\n    staus:\"REJECTED\"\r\n  \r\n  })\r\n  .then((response) => {\r\n    setLoading(false)\r\n    swal('Facility Agreement Rejected!', 'Successfully rejected Credit Facility Agreement', \"success\");\r\n   loadFacility()\r\n    \r\n  })\r\n  .catch((error) => {\r\n    setLoading(false)\r\n    console.log(error);\r\n  });\r\n}}\r\n>\r\n            Reject\r\n \r\n             </Button>}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n       \r\n            </div >\r\n      </section >\r\n   );\r\n};\r\n\r\nexport default StepOne;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { nationalities, countryCodes } from \"./appData.js\"\r\nimport { addClientCreditLimit } from \"../../../../util/APIUtils.js\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport swal from \"sweetalert\";\r\nconst StepOne = (props) => {\r\n  const [postModal, setPostModal] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [disableInput, setdisableInput] = useState(false);\r\n  const [isLoad, seLoad] = useState(false);\r\n  const country = countryCodes.map(data => (\r\n\r\n    <option value={data.name} > {\" \" + data.name + \" \"}</option>\r\n  ))\r\n\r\n  const codes = countryCodes.map(data => (\r\n\r\n    <option value={data.dial_code} > {\" \" + data.name + \" (\" + data.dial_code + \" )\"}</option>\r\n  ))\r\n\r\n  const [addFormData, setAddFormData] = useState({\r\n    id: null,\r\n    currency: '',\r\n    invoices: '',\r\n    credit: '',\r\n    limit: '',\r\n    hasLoan: '',\r\n    hasLien: ''\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setdisableInput(true)\r\n    setAddFormData(props.data)\r\n\r\n  }, []);\r\n\r\n  const years = range(2021, (new Date()).getFullYear());\r\n\r\n  function range(start, end) {\r\n    const theYears = []\r\n\r\n    for (var m = start; m < end; m++) {\r\n      theYears.push(m)\r\n    }\r\n    theYears.push(end);\r\n    return theYears;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleDateChange = (event) => {\r\n    //\talert(JSON.stringify(event))\r\n    // event.preventDefault();    \r\n    const fieldName = \"dob\";\r\n    const fieldValue = event;\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    var error = false;\r\n    var errorMsg = '';\r\n    addFormData.limit = addFormData.limit.split(\",\").join(\"\")\r\n    addFormData.invoices = addFormData.invoices.split(\",\").join(\"\")\r\n\r\n    if (addFormData.currency === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please choose credit limit currency';\r\n    } else if (addFormData.invoices === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average of total value of invoices issued per month';\r\n    }\r\n\r\n    else if (addFormData.credit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average credit period of invoices';\r\n    }\r\n\r\n    else if (addFormData.limit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add limit Requested (Minimum Ugshs 5,000,000 )';\r\n\r\n    }\r\n\r\n    else if (addFormData.limit < 5000000) {\r\n      error = true;\r\n      errorMsg = 'Limit requested is below the 5,000,000 minimum';\r\n    }\r\n\r\n    else if (addFormData.hasLoan === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please select if you have a loan';\r\n    }\r\n\r\n    else if (addFormData.hasLien === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please indicate if there is a lien over your receivables or debenture over floating assets/debtors/receivables';\r\n    }\r\n\r\n\r\n\r\n\r\n    if (!error) {\r\n\r\n\r\n\r\n      console.log(addFormData)\r\n      //  \talert(JSON.stringify(addFormData))\r\n      //    setLoading(true)\r\n      //  props.history.push(\r\n      //    {\r\n      //        pathname: '/login',\r\n      //        state: {  email:addFormData.email }\r\n      //    }\r\n      //   // '/page-register'\r\n      //    );  \r\n\r\n      addClientCreditLimit(addFormData)\r\n        .then((response) => {\r\n          setPostModal(false);\r\n          swal('Good job!', 'Successfully saved data', \"success\");\r\n          //    getTheDirectors()\r\n          //props.setEmail(addFormData.email)\r\n          setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          swal('Oops', error.message, \"error\");\r\n        });\r\n\r\n      //  addFormData.Cust_Name = addFormData.Location = addFormData.Date_Join = '';         \r\n\r\n    } else {\r\n      swal('Oops', errorMsg, \"error\");\r\n    }\r\n  };\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  function numberWithCommas(x) {\r\n    if (x !== null && x !== undefined) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const handleAddFormChangeNumber = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value.split(\",\").join(\"\");\r\n    // alert(fieldValue)\r\n    if (!isNaN(fieldValue)) {\r\n      const newFormData = { ...addFormData };\r\n      newFormData[fieldName] = fieldValue;\r\n      setAddFormData(newFormData);\r\n    }\r\n  };\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value;\r\n    // alert(fieldValue)\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n  return (\r\n    <section style={{ marginTop: \"10px\" }}>\r\n\r\n      <div className=\"card\" style={{ padding: \"30px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>Bank Account</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\" style={{ padding: \"30px\" }}>\r\n        <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n\r\n\r\n          <div className=\"col-md-6 mb-2\">\r\n            <label className=\"text-black font-w500\"> Account Name</label>\r\n            <div className=\"contact-name\">\r\n              <input\r\n                disabled={disableInput}\r\n                type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                //\tvalue={numberWithCommas(addFormData.invoices)}\r\n                name=\"invoices\" required=\"required\"\r\n                onChange={handleAddFormChangeNumber}\r\n                placeholder=\"Account Name\"\r\n              />\r\n              <span className=\"validation-text\"></span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"col-md-6 mb-2\">\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\">Account Number\r\n              </label>\r\n              <div className=\"contact-name\">\r\n                <div className=\"form-group mb-0\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    //value={numberWithCommas(addFormData.limit)}\r\n                    type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                    name=\"limit\" required=\"required\"\r\n                    onChange={handleAddFormChangeNumber}\r\n                    placeholder=\"Account Number\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"col-md-6 mb-2\">\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\">Name of Bank\r\n              </label>\r\n              <div className=\"contact-name\">\r\n                <div className=\"form-group mb-0\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    //value={(addFormData.limit)}\r\n                    type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                    name=\"limit\" required=\"required\"\r\n                    onChange={handleAddFormChangeNumber}\r\n                    placeholder=\"Name of Bank\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div className=\"col-md-6 mb-2\">\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\">Branch\r\n              </label>\r\n              <div className=\"contact-name\">\r\n                <div className=\"form-group mb-0\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    //value={(addFormData.limit)}\r\n                    type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                    name=\"limit\" required=\"required\"\r\n                    onChange={handleAddFormChangeNumber}\r\n                    placeholder=\"Branch\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"col-lg-12 mb-12\" style={{ textAlign: \"left\", marginTop: \"30px\" }}>\r\n            {isLoading ?\r\n              <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} /> :\r\n              <>\r\n                <button disabled style={{ width: \"auto\" }} className=\"btn btn-success\" onClick={(e) => handleAddFormSubmit(e)} >\r\n                  Verify Info\r\n\r\n                </button>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { nationalities, countryCodes } from \"./appData.js\"\r\nimport { addClientCreditLimit } from \"../../../../util/APIUtils.js\";\r\nimport { Modal } from 'react-bootstrap';\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport swal from \"sweetalert\";\r\nconst StepOne = (props) => {\r\n  const [postModal, setPostModal] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [disableInput, setdisableInput] = useState(false);\r\n  const [isLoad, seLoad] = useState(false);\r\n  const country = countryCodes.map(data => (\r\n\r\n    <option value={data.name} > {\" \" + data.name + \" \"}</option>\r\n  ))\r\n\r\n  const codes = countryCodes.map(data => (\r\n\r\n    <option value={data.dial_code} > {\" \" + data.name + \" (\" + data.dial_code + \" )\"}</option>\r\n  ))\r\n\r\n  const [addFormData, setAddFormData] = useState({\r\n    id: null,\r\n    currency: '',\r\n    invoices: '',\r\n    credit: '',\r\n    limit: '',\r\n    hasLoan: '',\r\n    hasLien: ''\r\n\r\n\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setdisableInput(true)\r\n    if (props.data !== undefined) {\r\n      setAddFormData(props.data)\r\n    }\r\n\r\n  }, []);\r\n\r\n  const years = range(2021, (new Date()).getFullYear());\r\n\r\n  function range(start, end) {\r\n    const theYears = []\r\n\r\n    for (var m = start; m < end; m++) {\r\n      theYears.push(m)\r\n    }\r\n    theYears.push(end);\r\n    return theYears;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const handleDateChange = (event) => {\r\n    //\talert(JSON.stringify(event))\r\n    // event.preventDefault();    \r\n    const fieldName = \"dob\";\r\n    const fieldValue = event;\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    var error = false;\r\n    var errorMsg = '';\r\n    addFormData.limit = addFormData.limit.split(\",\").join(\"\")\r\n    addFormData.invoices = addFormData.invoices.split(\",\").join(\"\")\r\n\r\n    if (addFormData.currency === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please choose credit limit currency';\r\n    } else if (addFormData.invoices === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average of total value of invoices issued per month';\r\n    }\r\n\r\n    else if (addFormData.credit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add average credit period of invoices';\r\n    }\r\n\r\n    else if (addFormData.limit === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please add limit Requested (Minimum Ugshs 5,000,000 )';\r\n\r\n    }\r\n\r\n    else if (addFormData.limit < 5000000) {\r\n      error = true;\r\n      errorMsg = 'Limit requested is below the 5,000,000 minimum';\r\n    }\r\n\r\n    else if (addFormData.hasLoan === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please select if you have a loan';\r\n    }\r\n\r\n    else if (addFormData.hasLien === \"\") {\r\n      error = true;\r\n      errorMsg = 'Please indicate if there is a lien over your receivables or debenture over floating assets/debtors/receivables';\r\n    }\r\n\r\n\r\n\r\n\r\n    if (!error) {\r\n\r\n\r\n\r\n      console.log(addFormData)\r\n      //  \talert(JSON.stringify(addFormData))\r\n      //    setLoading(true)\r\n      //  props.history.push(\r\n      //    {\r\n      //        pathname: '/login',\r\n      //        state: {  email:addFormData.email }\r\n      //    }\r\n      //   // '/page-register'\r\n      //    );  \r\n\r\n      addClientCreditLimit(addFormData)\r\n        .then((response) => {\r\n          setPostModal(false);\r\n          swal('Good job!', 'Successfully saved data', \"success\");\r\n          //    getTheDirectors()\r\n          //props.setEmail(addFormData.email)\r\n          setLoading(false)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          swal('Oops', error.message, \"error\");\r\n        });\r\n\r\n      //  addFormData.Cust_Name = addFormData.Location = addFormData.Date_Join = '';         \r\n\r\n    } else {\r\n      swal('Oops', errorMsg, \"error\");\r\n    }\r\n  };\r\n\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  function numberWithCommas(x) {\r\n    if (x !== null && x !== undefined) {\r\n      return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  const handleAddFormChangeNumber = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value.split(\",\").join(\"\");\r\n    // alert(fieldValue)\r\n    if (!isNaN(fieldValue)) {\r\n      const newFormData = { ...addFormData };\r\n      newFormData[fieldName] = fieldValue;\r\n      setAddFormData(newFormData);\r\n    }\r\n  };\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n    const fieldName = event.target.getAttribute('name');\r\n    const fieldValue = event.target.value;\r\n    // alert(fieldValue)\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n    setAddFormData(newFormData);\r\n  };\r\n  return (\r\n    <section style={{ marginTop: \"10px\" }}>\r\n\r\n      <div className=\"card\" style={{ padding: \"30px\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>Credit Limit Application</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\" style={{ padding: \"30px\" }}>\r\n        <div className=\"row\" style={{ marginTop: \"20px\" }}>\r\n          <div className=\"col-lg-3 mb-2\">\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\"> Credit limit currency</label>\r\n              <div className=\"form-group mb-3\">\r\n\r\n                <select\r\n                  disabled={disableInput}\r\n                  value={addFormData.currency}\r\n                  defaultValue={\"\"}\r\n                  name=\"currency\"\r\n                  onChange={handleAddFormChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">Select currency</option>\r\n                  <option value=\"UGX\">UGX</option>\r\n                  <option value=\"USD\">USD</option>\r\n\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-5 mb-2\">\r\n            <label className=\"text-black font-w500\"> Average of total value of invoices issued per month</label>\r\n            <div className=\"contact-name\">\r\n              <input\r\n                disabled={disableInput}\r\n                type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                value={numberWithCommas(addFormData.invoices)}\r\n                name=\"invoices\" required=\"required\"\r\n                onChange={handleAddFormChangeNumber}\r\n                placeholder=\"Invoices total value\"\r\n              />\r\n              <span className=\"validation-text\"></span>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"col-lg-4 mb-2\">\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\"> Average credit period of invoices</label>\r\n              <div className=\"form-group mb-3\">\r\n\r\n                <select\r\n                  disabled={disableInput}\r\n                  value={addFormData.credit}\r\n                  defaultValue={\"\"}\r\n                  name=\"credit\"\r\n                  onChange={handleAddFormChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option disabled value=\"\">Select Average Credit</option>\r\n                  <option value=\"30 Days\">30 Days</option>\r\n                  <option value=\"60 Days\">60 Days</option>\r\n                  <option value=\"90 Days\">90 Days</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"col-lg-8 mb-2\">\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-black font-w500\"> Limit Requested (Minimum\r\n                Ugshs 5,000,000\r\n                )</label>\r\n              <div className=\"contact-name\">\r\n                <div className=\"form-group mb-0\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    value={numberWithCommas(addFormData.limit)}\r\n                    type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                    name=\"limit\" required=\"required\"\r\n                    onChange={handleAddFormChangeNumber}\r\n                    placeholder=\"Limit Requested\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"col-lg-4 mb-2\">\r\n\r\n            <div className=\"form-group mb-3\">\r\n              <label className=\"text-primary font-w500\" style={{ color: \"#096\" }}>Credit Limit Amount Approved</label>\r\n              <div className=\"contact-name\">\r\n                <div className=\"form-group mb-0\">\r\n                  <input\r\n                    // disabled={disableInput}\r\n                    value={numberWithCommas(addFormData.limitApproved)}\r\n                    type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                    name=\"limitApproved\" required=\"required\"\r\n                    onChange={(e) => {\r\n                      if (parseInt(e.target.value.split(\",\").join(\"\")) < addFormData.limit) { handleAddFormChangeNumber(e) }\r\n                      else {\r\n                        swal('Invalid Input', \"Amount cannot be more than the client's request\", \"error\");\r\n                      }\r\n                    }}\r\n                    placeholder=\"Limit Approved\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"col-lg-5 mb-2\">\r\n            <label className=\"text-black font-w500\"> Do you have an existing debt/loan</label>\r\n            <div className=\"contact-name\">\r\n              <div className=\"form-group mb-0\">\r\n                <label className=\"radio-inline me-3\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    required=\"required\"\r\n                    checked={addFormData.hasLoan === \"yes\"}\r\n                    value=\"yes\" onChange={handleAddFormChange} type=\"radio\" name=\"hasLoan\" /> Yes\r\n                </label>\r\n                <label className=\"radio-inline me-3\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    required=\"required\"\r\n                    checked={addFormData.hasLoan === \"no\"}\r\n                    value=\"no\" onChange={handleAddFormChange} type=\"radio\" name=\"hasLoan\" /> No\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          {addFormData.hasLoan === \"yes\" ?\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3 mb-2\">\r\n                <div className=\"form-group mb-3\">\r\n                  <label className=\"text-black font-w500\">Loan currency</label>\r\n                  <div className=\"form-group mb-3\">\r\n\r\n                    <select\r\n                      disabled={disableInput}\r\n                      value={addFormData.loancurrency}\r\n                      defaultValue={\"\"}\r\n                      name=\"loancurrency\"\r\n                      onChange={handleAddFormChange}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">Select currency</option>\r\n                      <option value=\"UGX\">UGX</option>\r\n                      <option value=\"USD\">USD</option>\r\n\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <div className={addFormData.loanSource === \"Other\" ? \"col-lg-3 mb-2\" : \"col-lg-6 mb-2\"}>\r\n\r\n                <div className=\"form-group mb-3\">\r\n                  <label className=\"text-black font-w500\"><b style={{ color: \"red\" }}>*</b> Loan Amount\r\n                  </label>\r\n                  <div className=\"contact-name\">\r\n                    <div className=\"form-group mb-0\">\r\n                      <input\r\n                        disabled={disableInput}\r\n                        value={numberWithCommas(addFormData.loanAmount)}\r\n                        type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                        name=\"loanAmount\" required=\"required\"\r\n                        onChange={handleAddFormChangeNumber}\r\n                        placeholder=\"Loan Amount\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n\r\n              <div className=\"col-lg-3 mb-2\">\r\n                <div className=\"form-group mb-3\">\r\n                  <label className=\"text-black font-w500\"><b style={{ color: \"red\" }}>*</b> Select Loan Source</label>\r\n                  <div className=\"form-group mb-3\">\r\n\r\n                    <select\r\n                      disabled={disableInput}\r\n                      value={addFormData.loanSource}\r\n                      defaultValue={\"\"}\r\n                      name=\"loanSource\"\r\n                      onChange={handleAddFormChange}\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option disabled value=\"\">Select Source</option>\r\n                      <option value=\"Bank\">Bank</option>\r\n                      <option value=\"Money Lender\">Money Lender</option>\r\n                      <option value=\"Other\">Other</option>\r\n\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              {addFormData.loanSource === \"Other\" ?\r\n                <div className=\"col-lg-3 mb-2\">\r\n\r\n                  <div className=\"form-group mb-3\">\r\n                    <label className=\"text-black font-w500\"><b style={{ color: \"red\" }}>*</b> Describe Other Source\r\n                    </label>\r\n                    <div className=\"contact-name\">\r\n                      <div className=\"form-group mb-0\">\r\n                        <input\r\n                          disabled={disableInput}\r\n                          value={addFormData.sourceDescribe}\r\n                          type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n                          name=\"sourceDescribe\" required=\"required\"\r\n                          onChange={handleAddFormChange}\r\n                          placeholder=\"Describe Other Source\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div> : null}\r\n\r\n            </div> : null}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"col-lg-8 mb-2\">\r\n            <label className=\"text-black font-w500\"> Is there a lien over your receivables or debenture over floating assets/debtors/receivables</label>\r\n            <div className=\"contact-name\">\r\n              <div className=\"form-group mb-0\">\r\n                <label className=\"radio-inline me-3\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    required=\"required\"\r\n                    checked={addFormData.hasLien === \"yes\"}\r\n                    value=\"yes\" onChange={handleAddFormChange} type=\"radio\" name=\"hasLien\" /> Yes\r\n                </label>\r\n                <label className=\"radio-inline me-3\">\r\n                  <input\r\n                    disabled={disableInput}\r\n                    required=\"required\"\r\n                    checked={addFormData.hasLien === \"no\"}\r\n                    value=\"no\" onChange={handleAddFormChange} type=\"radio\" name=\"hasLien\" /> No\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"col-lg-12 mb-12\" style={{ textAlign: \"left\", marginTop: \"30px\" }}>\r\n            <h4>Status : {addFormData.status = addFormData.status === \"VERIFIED\" ? <div style={{ color: \"green\" }}>{addFormData.status} <i className=\"fa fa-check\"></i></div> : (addFormData.status === \"REJECTED\" ? <div style={{ color: \"red\" }}>{addFormData.status} <i className=\"fa fa-times\"></i></div> : addFormData.status)}</h4>\r\n            {isLoading ?\r\n              <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} /> :\r\n              <>\r\n                <button style={{ width: \"auto\" }} className=\"btn btn-primary mt-4\" onClick={(e) => {\r\n                  if (addFormData.limitApproved < 100 || addFormData.limitApproved === null) {\r\n                    swal('Credit Limit Amount To Approve Missing', \"Please add credit limit amount to approve\", \"error\");\r\n                  }\r\n                  else {\r\n                    // alert(addFormData.limit)\r\n                    props.verifyInfo(addFormData.limitApproved)\r\n                  }\r\n\r\n\r\n\r\n                }} >\r\n                  View Details\r\n\r\n                </button>\r\n              </>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n"],"names":["props","_creditFacility$admin","_creditFacility$admin2","_creditFacility$clien","_creditFacility$clien2","_creditFacility$clien3","_creditFacility$clien4","_creditFacility$clien5","postModal","setPostModal","useState","isLoading","setLoading","fileId","setIncomp","disableInput","setdisableInput","showFilePond","setshowFilePond","creditFacility","setFacility","addFormData","setAddFormData","countryCodes","map","data","_jsxs","value","name","children","dial_code","id","currency","invoices","credit","limit","hasLoan","hasLien","loadFacility","getClientFacilityAdmin","clientid","client","then","response","adminFile","path","catch","error","console","log","useEffect","start","end","theYears","m","push","range","Date","getFullYear","style","marginTop","_jsx","className","target","href","download","FilePond","acceptedFileTypes","allowMultiple","maxFileSize","labelIdle","server","process","fieldName","file","metadata","load","progress","abort","transfer","options","formData","FormData","append","uploadFiles","alert","JSON","stringify","revert","uniqueFileId","Button","variant","width","marginLeft","onClick","e","RotateSpinner","size","color","loading","addClientFacilityAdmin","staus","swal","clientFile","disabled","verifyClientFacilityAdmin","isLoad","seLoad","handleAddFormChangeNumber","event","preventDefault","getAttribute","fieldValue","split","join","isNaN","newFormData","padding","type","autoComplete","required","onChange","placeholder","textAlign","_Fragment","errorMsg","addClientCreditLimit","message","handleAddFormSubmit","undefined","numberWithCommas","x","toString","replace","handleAddFormChange","defaultValue","limitApproved","parseInt","checked","loancurrency","loanSource","loanAmount","sourceDescribe","status","verifyInfo"],"sourceRoot":""}