{"version":3,"file":"static/js/949.719be3d2.chunk.js","mappings":"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","sources":["jsx/components/table/FilteringTable/Required.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dropdown, Modal } from 'react-bootstrap';\r\nimport PageTitle from \"../../../layouts/PageTitle\";\r\nimport { useTable, useGlobalFilter, useFilters, usePagination } from 'react-table';\r\nimport MOCK_DATA from './MOCK_DATA_2.json';\r\nimport { COLUMNS } from './Columns';\r\nimport { GlobalFilter } from './GlobalFilter';\r\nimport swal from \"sweetalert\";\r\nimport { addReqFiles, uploadFiles, getReqFiles, deleteReqFiles } from \"../../../../util/APIUtils.js\";\r\nimport TableExport from \"./TableExport.jsx\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\nimport 'filepond/dist/filepond.min.css';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport { FilePond } from 'react-filepond';\r\n\r\n//import './table.css';\r\nimport './filtering.css';\r\nimport { nationalities, countryCodes } from \"./appData.js\"\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nexport const FilteringTable = () => {\r\n\tconst [directors, setDirectors] = useState([]);\r\n\tconst [buyers, setBuyers] = useState([]);\r\n\tconst [isLoading, setisLoading] = useState(false);\r\n\tconst [addFormData, setAddFormData] = useState({\r\n\t\tid: null,\r\n\t\tname: '',\r\n\t\trequired: true,\r\n\t\tfileId: null,\r\n\r\n\t});\r\n\r\n\r\n\tfunction updateData(userData) {\r\n\t\tuserData.actions = \"\"\r\n\t\tconsole.log(userData)\r\n\t\tif (!userData.isApproved) {\r\n\t\t\tsetAddFormData(userData)\r\n\t\t\tsetPostModal(true)\r\n\t\t}\r\n\t}\r\n\tfunction addD() {\r\n\r\n\t\tsetAddFormData(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tname: '',\r\n\t\t\t\trequired: true,\r\n\t\t\t\tfileId: null\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetPostModal(true)\r\n\t}\r\n\r\n\r\n\tfunction getBuyers() {\r\n\t\tgetReqFiles()\r\n\t\t\t.then((response) => {\r\n\t\t\t\t//\talert(response)\r\n\t\t\t\tsetBuyers(response)\r\n\t\t\t\tsetDirectors(response)\r\n\t\t\t\t//\tsetPostModal(false);\r\n\t\t\t\t//\tswal('Good job!', 'Successfully Added', \"success\");\r\n\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tswal('Oops', error.message, \"error\");\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\tdirectors.map((data) => {\r\n\t\t//data.phone=data.code+data.phoneOne\r\n\t\tdata.file = data.fileId !== null ?\r\n\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t<a\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\thref={data.path} >\r\n\t\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-success shadow btn-xs \"\r\n\r\n\r\n\t\t\t\t\t\tdata-dismiss=\"modal\">\r\n\r\n\t\t\t\t\t\tview documnet\r\n\r\n\t\t\t\t\t\t{/* <i className=\"fa fa-eye\"></i> */}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</a>\r\n\t\t\t</div> : \"None Attached\"\r\n\t\t//data.dateAdd=data.dateAdded.split(\"T\")[0];\r\n\t\tdata.actions = <div className=\"d-flex\">\r\n\t\t\t{data.type === \"CLIENT_ADDED\" ? null :\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-primary shadow btn-xs sharp me-1\"\r\n\t\t\t\t\t\tonClick={() => updateData(data)} data-dismiss=\"modal\">\r\n\r\n\t\t\t\t\t\t<i className=\"fa fa-pencil\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{/* <Link\r\n                          href=\"#\"\r\n                          className=\"btn btn-primary shadow btn-xs sharp me-1\"\r\n                        >\r\n                         \r\n                        </Link> */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\tswal({\r\n\t\t\t\t\t\t\t\ttitle: \"Are you sure?\",\r\n\t\t\t\t\t\t\t\ttext:\r\n\t\t\t\t\t\t\t\t\t\"Once deleted, you will not be able to recover this information!\",\r\n\t\t\t\t\t\t\t\ticon: \"warning\",\r\n\t\t\t\t\t\t\t\tbuttons: true,\r\n\t\t\t\t\t\t\t\tdangerMode: true,\r\n\t\t\t\t\t\t\t}).then((willDelete) => {\r\n\t\t\t\t\t\t\t\tif (willDelete) {\r\n\r\n\t\t\t\t\t\t\t\t\tdeleteReqFiles(data.id)\r\n\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tswal(\"Poof!  record has been deleted!\", {\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tgetBuyers()\r\n\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t\t\t\t\tswal('Oops', error.message, \"error\");\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tswal(\"Your information is safe!\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName=\"btn btn-danger shadow btn-xs sharp\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa fa-trash\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t</div>\r\n\t})\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBuyers()\r\n\t\t//chackboxFun();\r\n\t}, []);\r\n\r\n\r\n\r\n\r\n\r\n\tconst codes = countryCodes.map(data => (\r\n\r\n\t\t<option value={data.dial_code} > {\" \" + data.name + \" (\" + data.dial_code + \" )\"}</option>\r\n\t))\r\n\r\n\tconst country = countryCodes.map(data => (\r\n\r\n\t\t<option value={data.name} > {\" \" + data.name + \" \"}</option>\r\n\t))\r\n\r\n\r\n\tconst [postModal, setPostModal] = useState(false);\r\n\tconst columns = useMemo(() => COLUMNS, [])\r\n\tconst data = useMemo(() => MOCK_DATA, [])\r\n\t//useTable\r\n\tconst tableInstance = useTable({\r\n\t\tcolumns,\r\n\t\tdata,\r\n\t\tinitialState: { pageIndex: 0 }\r\n\t}, useFilters, useGlobalFilter, usePagination)\r\n\tconst [contacts, setContacts] = useState([]);\r\n\r\n\r\n\r\n\r\n\t//Add Submit data\r\n\tconst handleAddFormSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tvar error = false;\r\n\t\tvar errorMsg = '';\r\n\t\taddFormData.actions = \"\"\r\n\t\taddFormData.file = \"\"\r\n\t\tif (addFormData.name === \"\") {\r\n\t\t\terror = true;\r\n\t\t\terrorMsg = 'Please fill Required File name';\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\tif (!error) {\r\n\r\n\t\t\tconsole.log(addFormData)\r\n\t\t\t//alert(JSON.stringify(addFormData))\r\n\t\t\tsetisLoading(true)\r\n\t\t\taddReqFiles(addFormData)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tsetisLoading(false)\r\n\t\t\t\t\tsetPostModal(false);\r\n\t\t\t\t\tswal('Good job!', 'Successfully Added', \"success\");\r\n\t\t\t\t\tgetBuyers()\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tsetisLoading(false)\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tswal('Oops', error.message, \"error\");\r\n\t\t\t\t});\r\n\r\n\t\t\t//  addFormData.Cust_Name = addFormData.Location = addFormData.Date_Join = '';         \r\n\r\n\t\t} else {\r\n\t\t\tswal('Oops', errorMsg, \"error\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleAddFormChange = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst fieldName = event.target.getAttribute('name');\r\n\t\tconst fieldValue = event.target.value;\r\n\t\tconst newFormData = { ...addFormData };\r\n\t\tnewFormData[fieldName] = fieldValue;\r\n\t\tsetAddFormData(newFormData);\r\n\t};\r\n\r\n\r\n\tconst handleSelectChange = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst fieldName = event.target.getAttribute('name');\r\n\t\tconst fieldValue = event.target.value;\r\n\t\t//alert(fieldValue)\r\n\t\tif (fieldValue === \"create\") {\r\n\t\t\t//alert(\"kale\")\r\n\t\t\taddD()\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst newFormData = { ...addFormData };\r\n\t\t\tnewFormData[fieldName] = fieldValue;\r\n\t\t\tsetAddFormData(newFormData);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tconst {\r\n\t\tstate,\r\n\t} = tableInstance\r\n\r\n\r\n\tconst { globalFilter, pageIndex } = state\r\n\tconst buyersOptions = []\r\n\r\n\tbuyers.map((data) => {\r\n\t\tbuyersOptions.push(\r\n\t\t\t<option disabled={data.amOwner} value={data.id}>{data.name} {data.amOwner ? \"(Already Added)\" : \"\"}</option>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PageTitle activeMenu=\"Required File\" motherMenu=\"Company Data\" />\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t<div className=\"row\" style={{ width: \"100%\" }}>\r\n\t\t\t\t\t\t<div className=\"col-xl-3 \">\r\n\t\t\t\t\t\t\t<h4 className=\"card-title\">Required Files</h4>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"col-xl-3\">\r\n\t\t\t\t\t\t\t<button\r\n\r\n\t\t\t\t\t\t\t\tclassName=\"btn btn-primary font-w600 mb-2 me-auto\" onClick={() => addD()}>Add New Required File</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<div className=\"row\" style={{ width: \"100%\" }}>\r\n\t\t\t\t\t\t<div className=\"col-xl-3 \">\r\n\t\t\t\t\t\t\t<h4 className=\"card-title\">Added Required Files</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<TableExport\r\n\t\t\t\t\t\thideDataExport={true}\r\n\t\t\t\t\t\trows={directors}\r\n\t\t\t\t\t\t//rows={this.state.colors[1]===\"primary\"?finished: dataTemp}\r\n\t\t\t\t\t\tcolumns={[\r\n\t\t\t\t\t\t\t{ name: 'name', title: 'Name' },\r\n\t\t\t\t\t\t\t{ name: 'file', title: 'Template' },\r\n\r\n\t\t\t\t\t\t\t{ name: 'actions', title: 'Actions' },\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t//  exportColumns={this.state.columns2}\r\n\t\t\t\t\t\tdefaultExpandedGroups={[]}\r\n\t\t\t\t\t\tgrouping={[]}\r\n\t\t\t\t\t\tdefaultHiddenColumnNames={[]}\r\n\t\t\t\t\t\tdefaultPageSize={0}\r\n\t\t\t\t\t\thideSelectionExport\r\n\t\t\t\t\t\tinfiniteScrolling\r\n\t\t\t\t\t\tfileName={\"Required Files\"}\r\n\r\n\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Modal\r\n\t\t\t\t\t//className=\"modal fade\"\r\n\t\t\t\t\tclassName=\"fade bd-example-modal-lg\"\r\n\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tshow={postModal} onHide={setPostModal} >\r\n\t\t\t\t\t<div className=\"\" role=\"document\">\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t<form >\r\n\t\t\t\t\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"modal-title fs-20\">Add Required File</h4>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" className=\"btn-close\" onClick={() => setPostModal(false)} data-dismiss=\"modal\"></button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"flaticon-cancel-12 close\"></i>\r\n\t\t\t\t\t\t\t\t\t<div className=\"add-contact-box\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"add-contact-content\">\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <div className=\"image-placeholder\">\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-edit\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"file\" onChange={fileHandler} id=\"imageUpload\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(event) => setFile(event.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/> \t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"imageUpload\" name=''  ></label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"avatar-preview\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div id=\"imagePreview\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img id=\"saveImageFile\" src={file? URL.createObjectURL(file) : user} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={file? file.name : null}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>  */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group mb-3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-black font-w500\"><b style={{ color: \"red\" }}>*</b> Name</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"contact-name\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" autoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={addFormData.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\" required=\"required\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleAddFormChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\" Name\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"validation-text\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-xl-6 col-xxl-6\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{addFormData.fileId !== null ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Template already attached, if another is added will replace old one</b> :\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//null\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<b>Attach Template (optional)</b>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FilePond\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceptedFileTypes={['application/pdf' : '.pdf']}\r\n// 'application/doc': '.doc',\r\n// 'application/pdf' : '.pdf',\r\n// 'application/rtf',\r\n// 'application/txt',\r\n// 'application/odf',\r\n// '.docx'\r\n\r\n// success={this.state.dynamicFileUploadState === \"success\"}\r\n// error={this.state.dynamicFileUploadState === \"error\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tallowMultiple={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxFileSize={'2MB'}\r\n//</GridItem>server=\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabelIdle=\"Drag &amp; Drop  Template Here or <span class=&quot;filepond--label-action&quot;>Browse</span>.\"\r\n\t\t\t\t\t\t\t\t\t\t\tserver={\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess: (fieldName, file, metadata, load, error, progress, abort, transfer, options) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// fieldName is the name of the input field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// file is the actual file object to send\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     const formData = new FormData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     formData.append(fieldName, file, file.name);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     const request = new XMLHttpRequest();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   request.open('POST', 'http://wantedbook.net/blissAPI/upload.php');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     // Should call the progress method to update the progress to 100% before calling load\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     // Setting computable to false switches the loading indicator to infinite mode\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     request.upload.onprogress = (e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//         progress(e.lengthComputable, e.loaded, e.total);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// let theid =0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     // Should call the load method when done and pass the returned server file id\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     // this server file id is then used later on when reverting or restoring a file\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     // so your server knows which file to return without exposing that info to the client\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     request.onload = function() {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//         if (request.status >= 200 && request.status < 300) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//             // the load method accepts either a string (id) or an object\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//        //  alert((request.responseText))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//          // console.log(request.responseText)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//        //   alert(request.responseText)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//             const returnObjc=JSON.parse(request.responseText)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//            // load('https://www.opportunitybank.co.ug/backend/apiImages/uploads'+returnObjc.data);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//             //alert(returnObjc.data)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//            theid=returnObjc.id\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   const fieldName ='fileId';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   const fieldValue =returnObjc.id;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   console.log(\"one\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   console.log(fieldValue)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   const newFormData = {...addFormData};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   newFormData[fieldName] = fieldValue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   console.log(\"checkmate\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   console.log(newFormData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\t   setAddFormData(newFormData);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//            //setIncomp(returnObjc.id)\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//         }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//         else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//             // Can call the error method if something is wrong, should exit after\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//             error('oh no');\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//         }\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     }.bind(this);\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//     request.send(formData);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst formData = new FormData();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformData.append(\"file\", file);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformData.append(\"name\", fieldName);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformData.append(\"type\", 6);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuploadFiles(formData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.then((response) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst fieldName = 'fileId';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst fieldValue = response.id;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"one\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(fieldValue)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newFormData = { ...addFormData };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFormData[fieldName] = fieldValue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"checkmate\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(newFormData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAddFormData(newFormData);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tload(response.id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talert(error);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talert(JSON.stringify(error))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Should expose an abort method so the request can be cancelled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tabort: () => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This function is entered if the user has tapped the cancel button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequest.abort();\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Let FilePond know the request has been cancelled\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tabort();\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\trevert: (uniqueFileId, load, error) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//  removeFile(this.state.fid)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// setIncomp(0)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst fieldName = 'fileId';\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst fieldValue = null;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst newFormData = { ...addFormData };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnewFormData[fieldName] = fieldValue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetAddFormData(newFormData);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tload()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}></FilePond>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t{isLoading ? <RotateSpinner size={30} color=\"rgba(41, 106, 176,1)\" loading={isLoading} /> :\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\" onClick={handleAddFormSubmit}>{addFormData.id === null ? \"Add\" : \"Update\"} Required File</button>}\r\n\t\t\t\t<button type=\"button\" onClick={() => setPostModal(false)} className=\"btn btn-danger\"> <i className=\"flaticon-delete-1\"></i> Discard</button>\r\n\t\t\t</div>\r\n\t\t</form >\r\n                            \r\n\t\t\t\t\t\t</div >\r\n\t\t\t\t\t</div >\r\n\t\t\t\t</Modal >\r\n\t\t\t</div >\r\n\t\t</>\r\n\t)\r\n\t\r\n}\r\nexport default FilteringTable;"],"names":["FilteringTable","directors","setDirectors","useState","buyers","setBuyers","isLoading","setisLoading","addFormData","setAddFormData","id","name","required","fileId","addD","setPostModal","getBuyers","getReqFiles","then","response","catch","error","console","log","swal","message","map","data","file","_jsx","className","children","target","href","path","type","actions","_jsxs","_Fragment","onClick","updateData","userData","isApproved","title","text","icon","buttons","dangerMode","willDelete","deleteReqFiles","useEffect","countryCodes","value","dial_code","postModal","columns","useMemo","COLUMNS","MOCK_DATA","tableInstance","useTable","initialState","pageIndex","useFilters","useGlobalFilter","usePagination","contacts","setContacts","state","globalFilter","buyersOptions","push","disabled","amOwner","PageTitle","activeMenu","motherMenu","style","width","TableExport","hideDataExport","rows","defaultExpandedGroups","grouping","defaultHiddenColumnNames","defaultPageSize","hideSelectionExport","infiniteScrolling","fileName","Modal","size","show","onHide","role","color","autoComplete","onChange","event","preventDefault","fieldName","getAttribute","fieldValue","newFormData","placeholder","FilePond","acceptedFileTypes","allowMultiple","maxFileSize","labelIdle","server","process","metadata","load","progress","abort","transfer","options","formData","FormData","append","uploadFiles","alert","JSON","stringify","request","revert","uniqueFileId","RotateSpinner","loading","errorMsg","addReqFiles"],"sourceRoot":""}